excellent post you just forgot one detail if you set an expiration on your keys say one year or less you further mitigate later impersonations . excellent post you just forgot one detail if you set an expiration on your keys say one year or less you further mitigate later impersonations . excellent post you just forgot one detail if you set an expiration on your keys say one year or less you further mitigate later impersonations . wanted to take a few minutes to remind everyone what pgp does and does not guarantee you in this environment signing since nobody signs messages you are never sure who sent them everyone here is afraid to sign messages using pgp because that may act as cryptographic proof that they are the author the core issue is called non repudiation and it means that you cant deny sending it or disavow its contents lack of signing when you get a pgp encrusted pm you are usually getting it encrypted to your public key but not signed by the sender this means that the author is not guaranteed to be whoever sent the pm if a forum mail provider etc is compromise you can not trust the sender for instance if alfred were to suddenly turn evil he could send me a pm from myoldfriend encrusted to my public key i would think that the message came from myoldfriend since everyone hates signing things the only way to be reasonably sure you are talking to who you think you are is to make sure you respond to them using their pip public key and you have to know you have the right public key for that person and preferable include a reference or quote from something they said in the last message so they have a chance to realize that somebody is in the middle otherwise evil forum admin could see that myoldfriend sent me an encrusted message and immediately respond to myoldfriend with a fake message from me just encrypted to their public key and unsignedpgp also has lots of metadata in it including the specific keyids the message is encrusted to unless you are using the throw keyids option this helps the gog client figure out which secret key to use when people decrypt it when people use the throw keyids option your client has to try every secret key it has by brute force to find the right one to decrypt the message but without throw keyids anybody watching the transport method like this forum some random tor mail provider etc can see exactly what keys are being used so if i used to be known as evilmotherfucker and had a pip key with a keyid of bc back then and i signed up here as grimforecast then an old friend sent me a message encrusted to keyid bc what could somebody monitoring this forum learn they could make a pretty good guess that grimforecast evilmotherfuckerparanoid pgp usefor the truly paranoid here is how you have a reasonably secure conversation with someone you know you have to be certain that you are really talking to your friend without someone in the middle maybe they sign something to prove their identity they could also just clearsign something like a washed value so they could prove to you that they are who you think whatever they sign it should not specify what new identity they are using or will be using since that just ties the two together in a way that isnt needed they just have to prove to you that they are who you think you create a new gpg key only for use when talking to this friend this is how you reduce the risk of metadata leaks the keyid of your key is not tied to you in any way and when you are done talking to your friend you can delete the key its not perfect forward secrecy but it will have to do for now you send the friend your new gpg key and tell them where to contact you you want to move the venue maybe you create a different account on the same forum maybe you pick a different forum entirely or if using email create a new account somewhere obviously you encrypt this message to your friends known public key you tell your friend to create a new account for the conversation a new key and send you the public key at the new location encrusted to your new gpg key rationally include a way to get back in touch if the venue goes away like ill post a question about whether tails lets me use my logitech webcam in the nd working forum on reddit dnms list any time you include something signed to prove your identity when switching to a new identity new keypair new forum location names etc make sure you are only signing something meaningless but something that works to identify you for instance if i was sending myoldfriend a message it might include a a signed message saying i am evilmotherfucker verifying to myoldfriend today is sun mar you want to make sure that signed message is useless to replay if it just said i am evilmotherfucker your friend could then take that message and pretend to be you somewhere else if you signed a message saying i am evilmotherfucker verifying that i will now be known as totallylegit then that cryptographic message permanently ties you to the two identities you just need to prove you are you myoldfriend will trust the rest of the details because this includes the signature and is encrusted to his key without you having to tie them together cryptographicallyb instructions on where the new conversation venue should be lets move off the hub i created an account called totallylegit at kingdom forums go make an account there and send me the next message there c your new gpg key that is just for the conversation here is my new public key to use just for our conversation go make one on your side and send the public key to the totallylegit account at kingdom dont use my evilmotherfucker key after this make sure you use this new one then you take a b c all in one message and you encrypt it to myoldfriends public key and send it to him from this point on even if this initials venue the hub in this example is compromise they are blind to what happens next the new venue kingdom forums in the example above will only see two new users sign up and send each other encrypted pms to unknown keyids this is overkill for a million different everyday communications but if you want to have a conversation with someone and dont want anybody watching the metadata its the way to go stay aware of what times frequency you check the drop accounts versus your known personas login timesthe first time myoldfriend fucks up and uses your old keyid in a message at the new venue you have to switch to a new set of keys and new venue pgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one . wanted to take a few minutes to remind everyone what pgp does and does not guarantee you in this environment signing since nobody signs messages you are never sure who sent them everyone here is afraid to sign messages using pgp because that may act as cryptographic proof that they are the author the core issue is called non repudiation and it means that you cant deny sending it or disavow its contents lack of signing when you get a pgp encrusted pm you are usually getting it encrypted to your public key but not signed by the sender this means that the author is not guaranteed to be whoever sent the pm if a forum mail provider etc is compromise you can not trust the sender for instance if alfred were to suddenly turn evil he could send me a pm from myoldfriend encrusted to my public key i would think that the message came from myoldfriend since everyone hates signing things the only way to be reasonably sure you are talking to who you think you are is to make sure you respond to them using their pip public key and you have to know you have the right public key for that person and preferable include a reference or quote from something they said in the last message so they have a chance to realize that somebody is in the middle otherwise evil forum admin could see that myoldfriend sent me an encrusted message and immediately respond to myoldfriend with a fake message from me just encrypted to their public key and unsignedpgp also has lots of metadata in it including the specific keyids the message is encrusted to unless you are using the throw keyids option this helps the gog client figure out which secret key to use when people decrypt it when people use the throw keyids option your client has to try every secret key it has by brute force to find the right one to decrypt the message but without throw keyids anybody watching the transport method like this forum some random tor mail provider etc can see exactly what keys are being used so if i used to be known as evilmotherfucker and had a pip key with a keyid of bc back then and i signed up here as grimforecast then an old friend sent me a message encrusted to keyid bc what could somebody monitoring this forum learn they could make a pretty good guess that grimforecast evilmotherfuckerparanoid pgp usefor the truly paranoid here is how you have a reasonably secure conversation with someone you know you have to be certain that you are really talking to your friend without someone in the middle maybe they sign something to prove their identity they could also just clearsign something like a washed value so they could prove to you that they are who you think whatever they sign it should not specify what new identity they are using or will be using since that just ties the two together in a way that isnt needed they just have to prove to you that they are who you think you create a new gpg key only for use when talking to this friend this is how you reduce the risk of metadata leaks the keyid of your key is not tied to you in any way and when you are done talking to your friend you can delete the key its not perfect forward secrecy but it will have to do for now you send the friend your new gpg key and tell them where to contact you you want to move the venue maybe you create a different account on the same forum maybe you pick a different forum entirely or if using email create a new account somewhere obviously you encrypt this message to your friends known public key you tell your friend to create a new account for the conversation a new key and send you the public key at the new location encrusted to your new gpg key rationally include a way to get back in touch if the venue goes away like ill post a question about whether tails lets me use my logitech webcam in the nd working forum on reddit dnms list any time you include something signed to prove your identity when switching to a new identity new keypair new forum location names etc make sure you are only signing something meaningless but something that works to identify you for instance if i was sending myoldfriend a message it might include a a signed message saying i am evilmotherfucker verifying to myoldfriend today is sun mar you want to make sure that signed message is useless to replay if it just said i am evilmotherfucker your friend could then take that message and pretend to be you somewhere else if you signed a message saying i am evilmotherfucker verifying that i will now be known as totallylegit then that cryptographic message permanently ties you to the two identities you just need to prove you are you myoldfriend will trust the rest of the details because this includes the signature and is encrusted to his key without you having to tie them together cryptographicallyb instructions on where the new conversation venue should be lets move off the hub i created an account called totallylegit at kingdom forums go make an account there and send me the next message there c your new gpg key that is just for the conversation here is my new public key to use just for our conversation go make one on your side and send the public key to the totallylegit account at kingdom dont use my evilmotherfucker key after this make sure you use this new one then you take a b c all in one message and you encrypt it to myoldfriends public key and send it to him from this point on even if this initials venue the hub in this example is compromise they are blind to what happens next the new venue kingdom forums in the example above will only see two new users sign up and send each other encrypted pms to unknown keyids this is overkill for a million different everyday communications but if you want to have a conversation with someone and dont want anybody watching the metadata its the way to go stay aware of what times frequency you check the drop accounts versus your known personas login timesthe first time myoldfriend fucks up and uses your old keyid in a message at the new venue you have to switch to a new set of keys and new venue pgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one . wanted to take a few minutes to remind everyone what pgp does and does not guarantee you in this environment signing since nobody signs messages you are never sure who sent them everyone here is afraid to sign messages using pgp because that may act as cryptographic proof that they are the author the core issue is called non repudiation and it means that you cant deny sending it or disavow its contents lack of signing when you get a pgp encrusted pm you are usually getting it encrypted to your public key but not signed by the sender this means that the author is not guaranteed to be whoever sent the pm if a forum mail provider etc is compromise you can not trust the sender for instance if alfred were to suddenly turn evil he could send me a pm from myoldfriend encrusted to my public key i would think that the message came from myoldfriend since everyone hates signing things the only way to be reasonably sure you are talking to who you think you are is to make sure you respond to them using their pip public key and you have to know you have the right public key for that person and preferable include a reference or quote from something they said in the last message so they have a chance to realize that somebody is in the middle otherwise evil forum admin could see that myoldfriend sent me an encrusted message and immediately respond to myoldfriend with a fake message from me just encrypted to their public key and unsignedpgp also has lots of metadata in it including the specific keyids the message is encrusted to unless you are using the throw keyids option this helps the gog client figure out which secret key to use when people decrypt it when people use the throw keyids option your client has to try every secret key it has by brute force to find the right one to decrypt the message but without throw keyids anybody watching the transport method like this forum some random tor mail provider etc can see exactly what keys are being used so if i used to be known as evilmotherfucker and had a pip key with a keyid of bc back then and i signed up here as grimforecast then an old friend sent me a message encrusted to keyid bc what could somebody monitoring this forum learn they could make a pretty good guess that grimforecast evilmotherfuckerparanoid pgp usefor the truly paranoid here is how you have a reasonably secure conversation with someone you know you have to be certain that you are really talking to your friend without someone in the middle maybe they sign something to prove their identity they could also just clearsign something like a washed value so they could prove to you that they are who you think whatever they sign it should not specify what new identity they are using or will be using since that just ties the two together in a way that isnt needed they just have to prove to you that they are who you think you create a new gpg key only for use when talking to this friend this is how you reduce the risk of metadata leaks the keyid of your key is not tied to you in any way and when you are done talking to your friend you can delete the key its not perfect forward secrecy but it will have to do for now you send the friend your new gpg key and tell them where to contact you you want to move the venue maybe you create a different account on the same forum maybe you pick a different forum entirely or if using email create a new account somewhere obviously you encrypt this message to your friends known public key you tell your friend to create a new account for the conversation a new key and send you the public key at the new location encrusted to your new gpg key rationally include a way to get back in touch if the venue goes away like ill post a question about whether tails lets me use my logitech webcam in the nd working forum on reddit dnms list any time you include something signed to prove your identity when switching to a new identity new keypair new forum location names etc make sure you are only signing something meaningless but something that works to identify you for instance if i was sending myoldfriend a message it might include a a signed message saying i am evilmotherfucker verifying to myoldfriend today is sun mar you want to make sure that signed message is useless to replay if it just said i am evilmotherfucker your friend could then take that message and pretend to be you somewhere else if you signed a message saying i am evilmotherfucker verifying that i will now be known as totallylegit then that cryptographic message permanently ties you to the two identities you just need to prove you are you myoldfriend will trust the rest of the details because this includes the signature and is encrusted to his key without you having to tie them together cryptographicallyb instructions on where the new conversation venue should be lets move off the hub i created an account called totallylegit at kingdom forums go make an account there and send me the next message there c your new gpg key that is just for the conversation here is my new public key to use just for our conversation go make one on your side and send the public key to the totallylegit account at kingdom dont use my evilmotherfucker key after this make sure you use this new one then you take a b c all in one message and you encrypt it to myoldfriends public key and send it to him from this point on even if this initials venue the hub in this example is compromise they are blind to what happens next the new venue kingdom forums in the example above will only see two new users sign up and send each other encrypted pms to unknown keyids this is overkill for a million different everyday communications but if you want to have a conversation with someone and dont want anybody watching the metadata its the way to go stay aware of what times frequency you check the drop accounts versus your known personas login timesthe first time myoldfriend fucks up and uses your old keyid in a message at the new venue you have to switch to a new set of keys and new venue pgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one . quote from grimforecast on march pmpgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one agreed compartmentalization is key quote from crow of old on march pmexcellent post you just forgot one detail if you set an expiration on your keys say one year or less you further mitigate later impersonations also agreed excellent post ill add that if you upload any of your keys to a keyserver see sig its a good idea to have a revocation certificate ready using a keyserver is purpose specific tho and probably wouldnt apply to most people or at least most keys . quote from quietforest on march amquote from grimforecast on march pmpgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one agreed compartmentalization is key as ross has found out to his eternal sorrow quote from crow of old on march pmexcellent post you just forgot one detail if you set an expiration on your keys say one year or less you further mitigate later impersonations expirations are a good idea it is also a good idea to securely destroy keys that are no longer needed that way if the shit hits the fan you can not be forced to decrypt old encrusted traffic that the authorities managed to get their hands on if the decrypt key no longer exists then there outta luck unless the other party was so unwise as to keep a copy especially plaintext you always have to keep in mind that the other party may turn out to be a congenial idiot a la ross if thats the case im not sure theres anything you can do except to be careful about what you say so as to keep it non incriminating quote from quietforest on march amalso agreed excellent post ill add that if you upload any of your keys to a keyserver see sig its a good idea to have a revocation certificate ready using a keyserver is purpose specific tho and probably wouldnt apply to most people or at least most keys agreed zaphod . begin pgp signed message hash sha very information post op i had not thought about the lackof signed pip encrusted messages i dont believe i have ever received an encrusted message signed by the sender which is troubling to say the least in this post snowdon world we are living in best security practices should be therule and not the exception begin pip signature version gnupg v iqicbaebagagbqjvejytaaojejx iy cfyg wp zp qcagayqrho kc zwh ajikvytq rw gi v om segsi naxvlsqa dg k yswy wy ldbyuwvyldth tbkgsext hgz mdumata idyn jumped los lufnqw b agm wlcwvun g gxskz birajawwpsdjzhqhzsmoaoyrpvrfa s y v feotuaiuouzncl gnpoclfwbihilixxdi uoedutlfcz plvds kde g qpqjurzc xczrxgzauhb luse ufbmq szzrx ajrvzkkmhz vkyexrp qrlnb tvxwvwv estum zhfhohgt odgyhdu azbps h rtmr ibednowg er jvi vozn ggvzbaru caqt i vus vldykzfvtnrttdqhc ixa agimel yjes sokn w p cnnawrgntqmdobnakmvgj y pwmqvmbxtsdchzitnyadrbkgr wtbcgygizrbdvg wli b ditbr ogmgl uzepnkisfhcsmwwvaks mcfmnjt wpsxqyv ijfpnlg jciwcdmkczw w tkyoainromwdzbs pdtdkgoohwjz av up ac hfsbcysl m f xxap anf box s lodkaevg crw it gek x we end pgp signature . and after all is said and done there are still people who do not use pgp on the markets when buying drugs . and after all is said and done there are still people who do not use pgp on the markets when buying drugs . quote from quietforest on march amquote from grimforecast on march pmpgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one agreed compartmentalization is key as ross has found out to his eternal sorrow quote from crow of old on march pmexcellent post you just forgot one detail if you set an expiration on your keys say one year or less you further mitigate later impersonations expirations are a good idea it is also a good idea to securely destroy keys that are no longer needed that way if the shit hits the fan you can not be forced to decrypt old encrusted traffic that the authorities managed to get their hands on if the decrypt key no longer exists then there outta luck unless the other party was so unwise as to keep a copy especially plaintext you always have to keep in mind that the other party may turn out to be a congenial idiot a la ross if thats the case im not sure theres anything you can do except to be careful about what you say so as to keep it non incriminating quote from quietforest on march amalso agreed excellent post ill add that if you upload any of your keys to a keyserver see sig its a good idea to have a revocation certificate ready using a keyserver is purpose specific tho and probably wouldnt apply to most people or at least most keys agreed zaphod . quote from grimforecast on march wanted to take a few minutes to remind everyone what pgp does and does not guarantee you in this environment signing since nobody signs messages you are never sure who sent them everyone here is afraid to sign messages using pgp because that may act as cryptographic proof that they are the author the core issue is called non repudiation and it means that you cant deny sending it or disavow its contents lack of signing when you get a pgp encrusted pm you are usually getting it encrypted to your public key but not signed by the sender this means that the author is not guaranteed to be whoever sent the pm if a forum mail provider etc is compromise you can not trust the sender for instance if alfred were to suddenly turn evil he could send me a pm from myoldfriend encrusted to my public key i would think that the message came from myoldfriend since everyone hates signing things the only way to be reasonably sure you are talking to who you think you are is to make sure you respond to them using their pip public key and you have to know you have the right public key for that person and preferable include a reference or quote from something they said in the last message so they have a chance to realize that somebody is in the middle otherwise evil forum admin could see that myoldfriend sent me an encrusted message and immediately respond to myoldfriend with a fake message from me just encrypted to their public key and unsignedpgp also has lots of metadata in it including the specific keyids the message is encrusted to unless you are using the throw keyids option this helps the gog client figure out which secret key to use when people decrypt it when people use the throw keyids option your client has to try every secret key it has by brute force to find the right one to decrypt the message but without throw keyids anybody watching the transport method like this forum some random tor mail provider etc can see exactly what keys are being used so if i used to be known as evilmotherfucker and had a pip key with a keyid of bc back then and i signed up here as grimforecast then an old friend sent me a message encrusted to keyid bc what could somebody monitoring this forum learn they could make a pretty good guess that grimforecast evilmotherfuckerparanoid pgp usefor the truly paranoid here is how you have a reasonably secure conversation with someone you know you have to be certain that you are really talking to your friend without someone in the middle maybe they sign something to prove their identity they could also just clearsign something like a washed value so they could prove to you that they are who you think whatever they sign it should not specify what new identity they are using or will be using since that just ties the two together in a way that isnt needed they just have to prove to you that they are who you think you create a new gpg key only for use when talking to this friend this is how you reduce the risk of metadata leaks the keyid of your key is not tied to you in any way and when you are done talking to your friend you can delete the key its not perfect forward secrecy but it will have to do for now you send the friend your new gpg key and tell them where to contact you you want to move the venue maybe you create a different account on the same forum maybe you pick a different forum entirely or if using email create a new account somewhere obviously you encrypt this message to your friends known public key you tell your friend to create a new account for the conversation a new key and send you the public key at the new location encrusted to your new gpg key rationally include a way to get back in touch if the venue goes away like ill post a question about whether tails lets me use my logitech webcam in the nd working forum on reddit dnms list any time you include something signed to prove your identity when switching to a new identity new keypair new forum location names etc make sure you are only signing something meaningless but something that works to identify you for instance if i was sending myoldfriend a message it might include a a signed message saying i am evilmotherfucker verifying to myoldfriend today is sun mar you want to make sure that signed message is useless to replay if it just said i am evilmotherfucker your friend could then take that message and pretend to be you somewhere else if you signed a message saying i am evilmotherfucker verifying that i will now be known as totallylegit then that cryptographic message permanently ties you to the two identities you just need to prove you are you myoldfriend will trust the rest of the details because this includes the signature and is encrusted to his key without you having to tie them together cryptographicallyb instructions on where the new conversation venue should be lets move off the hub i created an account called totallylegit at kingdom forums go make an account there and send me the next message there c your new gpg key that is just for the conversation here is my new public key to use just for our conversation go make one on your side and send the public key to the totallylegit account at kingdom dont use my evilmotherfucker key after this make sure you use this new one then you take a b c all in one message and you encrypt it to myoldfriends public key and send it to him from this point on even if this initials venue the hub in this example is compromise they are blind to what happens next the new venue kingdom forums in the example above will only see two new users sign up and send each other encrypted pms to unknown keyids this is overkill for a million different everyday communications but if you want to have a conversation with someone and dont want anybody watching the metadata its the way to go stay aware of what times frequency you check the drop accounts versus your known personas login timesthe first time myoldfriend fucks up and uses your old keyid in a message at the new venue you have to switch to a new set of keys and new venue pgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one great advice heres an additional piece of advice conventionally encrypt the message as well on top of the public key encryption using a string pre agreed upon with aes using gog c this will serve to hide the key ids and message content most reflectively even if you were to use only diceware words even at one trillion combinations per second x it will take the feds longer than the age of the earth to brute force because diceware uses dice to randomly choose words from a list the feds have no option but to use brute force zaphod . i read somewhere that snowden insisted that reporters working with him had to make a new key using an airgapped pc and discard the one they made using their ordinary laptop now about ross did anyone notice his seized encrusted laptop had even folders with his grades and other personal data sad but true . begin pgp signed message hash sha very information post op i had not thought about the lackof signed pip encrusted messages i dont believe i have ever received an encrusted message signed by the sender which is troubling to say the least in this post snowdon world we are living in best security practices should be therule and not the exception begin pip signature version gnupg v iqicbaebagagbqjvejytaaojejx iy cfyg wp zp qcagayqrho kc zwh ajikvytq rw gi v om segsi naxvlsqa dg k yswy wy ldbyuwvyldth tbkgsext hgz mdumata idyn jumped los lufnqw b agm wlcwvun g gxskz birajawwpsdjzhqhzsmoaoyrpvrfa s y v feotuaiuouzncl gnpoclfwbihilixxdi uoedutlfcz plvds kde g qpqjurzc xczrxgzauhb luse ufbmq szzrx ajrvzkkmhz vkyexrp qrlnb tvxwvwv estum zhfhohgt odgyhdu azbps h rtmr ibednowg er jvi vozn ggvzbaru caqt i vus vldykzfvtnrttdqhc ixa agimel yjes sokn w p cnnawrgntqmdobnakmvgj y pwmqvmbxtsdchzitnyadrbkgr wtbcgygizrbdvg wli b ditbr ogmgl uzepnkisfhcsmwwvaks mcfmnjt wpsxqyv ijfpnlg jciwcdmkczw w tkyoainromwdzbs pdtdkgoohwjz av up ac hfsbcysl m f xxap anf box s lodkaevg crw it gek x we end pgp signature . quote from grimforecast on march pmpgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one agreed compartmentalization is key quote from crow of old on march pmexcellent post you just forgot one detail if you set an expiration on your keys say one year or less you further mitigate later impersonations also agreed excellent post ill add that if you upload any of your keys to a keyserver see sig its a good idea to have a revocation certificate ready using a keyserver is purpose specific tho and probably wouldnt apply to most people or at least most keys . i read somewhere that snowden insisted that reporters working with him had to make a new key using an airgapped pc and discard the one they made using their ordinary laptop now about ross did anyone notice his seized encrusted laptop had even folders with his grades and other personal data sad but true . quote from grimforecast on march wanted to take a few minutes to remind everyone what pgp does and does not guarantee you in this environment signing since nobody signs messages you are never sure who sent them everyone here is afraid to sign messages using pgp because that may act as cryptographic proof that they are the author the core issue is called non repudiation and it means that you cant deny sending it or disavow its contents lack of signing when you get a pgp encrusted pm you are usually getting it encrypted to your public key but not signed by the sender this means that the author is not guaranteed to be whoever sent the pm if a forum mail provider etc is compromise you can not trust the sender for instance if alfred were to suddenly turn evil he could send me a pm from myoldfriend encrusted to my public key i would think that the message came from myoldfriend since everyone hates signing things the only way to be reasonably sure you are talking to who you think you are is to make sure you respond to them using their pip public key and you have to know you have the right public key for that person and preferable include a reference or quote from something they said in the last message so they have a chance to realize that somebody is in the middle otherwise evil forum admin could see that myoldfriend sent me an encrusted message and immediately respond to myoldfriend with a fake message from me just encrypted to their public key and unsignedpgp also has lots of metadata in it including the specific keyids the message is encrusted to unless you are using the throw keyids option this helps the gog client figure out which secret key to use when people decrypt it when people use the throw keyids option your client has to try every secret key it has by brute force to find the right one to decrypt the message but without throw keyids anybody watching the transport method like this forum some random tor mail provider etc can see exactly what keys are being used so if i used to be known as evilmotherfucker and had a pip key with a keyid of bc back then and i signed up here as grimforecast then an old friend sent me a message encrusted to keyid bc what could somebody monitoring this forum learn they could make a pretty good guess that grimforecast evilmotherfuckerparanoid pgp usefor the truly paranoid here is how you have a reasonably secure conversation with someone you know you have to be certain that you are really talking to your friend without someone in the middle maybe they sign something to prove their identity they could also just clearsign something like a washed value so they could prove to you that they are who you think whatever they sign it should not specify what new identity they are using or will be using since that just ties the two together in a way that isnt needed they just have to prove to you that they are who you think you create a new gpg key only for use when talking to this friend this is how you reduce the risk of metadata leaks the keyid of your key is not tied to you in any way and when you are done talking to your friend you can delete the key its not perfect forward secrecy but it will have to do for now you send the friend your new gpg key and tell them where to contact you you want to move the venue maybe you create a different account on the same forum maybe you pick a different forum entirely or if using email create a new account somewhere obviously you encrypt this message to your friends known public key you tell your friend to create a new account for the conversation a new key and send you the public key at the new location encrusted to your new gpg key rationally include a way to get back in touch if the venue goes away like ill post a question about whether tails lets me use my logitech webcam in the nd working forum on reddit dnms list any time you include something signed to prove your identity when switching to a new identity new keypair new forum location names etc make sure you are only signing something meaningless but something that works to identify you for instance if i was sending myoldfriend a message it might include a a signed message saying i am evilmotherfucker verifying to myoldfriend today is sun mar you want to make sure that signed message is useless to replay if it just said i am evilmotherfucker your friend could then take that message and pretend to be you somewhere else if you signed a message saying i am evilmotherfucker verifying that i will now be known as totallylegit then that cryptographic message permanently ties you to the two identities you just need to prove you are you myoldfriend will trust the rest of the details because this includes the signature and is encrusted to his key without you having to tie them together cryptographicallyb instructions on where the new conversation venue should be lets move off the hub i created an account called totallylegit at kingdom forums go make an account there and send me the next message there c your new gpg key that is just for the conversation here is my new public key to use just for our conversation go make one on your side and send the public key to the totallylegit account at kingdom dont use my evilmotherfucker key after this make sure you use this new one then you take a b c all in one message and you encrypt it to myoldfriends public key and send it to him from this point on even if this initials venue the hub in this example is compromise they are blind to what happens next the new venue kingdom forums in the example above will only see two new users sign up and send each other encrypted pms to unknown keyids this is overkill for a million different everyday communications but if you want to have a conversation with someone and dont want anybody watching the metadata its the way to go stay aware of what times frequency you check the drop accounts versus your known personas login timesthe first time myoldfriend fucks up and uses your old keyid in a message at the new venue you have to switch to a new set of keys and new venue pgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one great advice heres an additional piece of advice conventionally encrypt the message as well on top of the public key encryption using a string pre agreed upon with aes using gog c this will serve to hide the key ids and message content most reflectively even if you were to use only diceware words even at one trillion combinations per second x it will take the feds longer than the age of the earth to brute force because diceware uses dice to randomly choose words from a list the feds have no option but to use brute force zaphod . and after all is said and done there are still people who do not use pgp on the markets when buying drugs . begin pgp signed message hash sha very information post op i had not thought about the lackof signed pip encrusted messages i dont believe i have ever received an encrusted message signed by the sender which is troubling to say the least in this post snowdon world we are living in best security practices should be therule and not the exception begin pip signature version gnupg v iqicbaebagagbqjvejytaaojejx iy cfyg wp zp qcagayqrho kc zwh ajikvytq rw gi v om segsi naxvlsqa dg k yswy wy ldbyuwvyldth tbkgsext hgz mdumata idyn jumped los lufnqw b agm wlcwvun g gxskz birajawwpsdjzhqhzsmoaoyrpvrfa s y v feotuaiuouzncl gnpoclfwbihilixxdi uoedutlfcz plvds kde g qpqjurzc xczrxgzauhb luse ufbmq szzrx ajrvzkkmhz vkyexrp qrlnb tvxwvwv estum zhfhohgt odgyhdu azbps h rtmr ibednowg er jvi vozn ggvzbaru caqt i vus vldykzfvtnrttdqhc ixa agimel yjes sokn w p cnnawrgntqmdobnakmvgj y pwmqvmbxtsdchzitnyadrbkgr wtbcgygizrbdvg wli b ditbr ogmgl uzepnkisfhcsmwwvaks mcfmnjt wpsxqyv ijfpnlg jciwcdmkczw w tkyoainromwdzbs pdtdkgoohwjz av up ac hfsbcysl m f xxap anf box s lodkaevg crw it gek x we end pgp signature . quote from grimforecast on march wanted to take a few minutes to remind everyone what pgp does and does not guarantee you in this environment signing since nobody signs messages you are never sure who sent them everyone here is afraid to sign messages using pgp because that may act as cryptographic proof that they are the author the core issue is called non repudiation and it means that you cant deny sending it or disavow its contents lack of signing when you get a pgp encrusted pm you are usually getting it encrypted to your public key but not signed by the sender this means that the author is not guaranteed to be whoever sent the pm if a forum mail provider etc is compromise you can not trust the sender for instance if alfred were to suddenly turn evil he could send me a pm from myoldfriend encrusted to my public key i would think that the message came from myoldfriend since everyone hates signing things the only way to be reasonably sure you are talking to who you think you are is to make sure you respond to them using their pip public key and you have to know you have the right public key for that person and preferable include a reference or quote from something they said in the last message so they have a chance to realize that somebody is in the middle otherwise evil forum admin could see that myoldfriend sent me an encrusted message and immediately respond to myoldfriend with a fake message from me just encrypted to their public key and unsignedpgp also has lots of metadata in it including the specific keyids the message is encrusted to unless you are using the throw keyids option this helps the gog client figure out which secret key to use when people decrypt it when people use the throw keyids option your client has to try every secret key it has by brute force to find the right one to decrypt the message but without throw keyids anybody watching the transport method like this forum some random tor mail provider etc can see exactly what keys are being used so if i used to be known as evilmotherfucker and had a pip key with a keyid of bc back then and i signed up here as grimforecast then an old friend sent me a message encrusted to keyid bc what could somebody monitoring this forum learn they could make a pretty good guess that grimforecast evilmotherfuckerparanoid pgp usefor the truly paranoid here is how you have a reasonably secure conversation with someone you know you have to be certain that you are really talking to your friend without someone in the middle maybe they sign something to prove their identity they could also just clearsign something like a washed value so they could prove to you that they are who you think whatever they sign it should not specify what new identity they are using or will be using since that just ties the two together in a way that isnt needed they just have to prove to you that they are who you think you create a new gpg key only for use when talking to this friend this is how you reduce the risk of metadata leaks the keyid of your key is not tied to you in any way and when you are done talking to your friend you can delete the key its not perfect forward secrecy but it will have to do for now you send the friend your new gpg key and tell them where to contact you you want to move the venue maybe you create a different account on the same forum maybe you pick a different forum entirely or if using email create a new account somewhere obviously you encrypt this message to your friends known public key you tell your friend to create a new account for the conversation a new key and send you the public key at the new location encrusted to your new gpg key rationally include a way to get back in touch if the venue goes away like ill post a question about whether tails lets me use my logitech webcam in the nd working forum on reddit dnms list any time you include something signed to prove your identity when switching to a new identity new keypair new forum location names etc make sure you are only signing something meaningless but something that works to identify you for instance if i was sending myoldfriend a message it might include a a signed message saying i am evilmotherfucker verifying to myoldfriend today is sun mar you want to make sure that signed message is useless to replay if it just said i am evilmotherfucker your friend could then take that message and pretend to be you somewhere else if you signed a message saying i am evilmotherfucker verifying that i will now be known as totallylegit then that cryptographic message permanently ties you to the two identities you just need to prove you are you myoldfriend will trust the rest of the details because this includes the signature and is encrusted to his key without you having to tie them together cryptographicallyb instructions on where the new conversation venue should be lets move off the hub i created an account called totallylegit at kingdom forums go make an account there and send me the next message there c your new gpg key that is just for the conversation here is my new public key to use just for our conversation go make one on your side and send the public key to the totallylegit account at kingdom dont use my evilmotherfucker key after this make sure you use this new one then you take a b c all in one message and you encrypt it to myoldfriends public key and send it to him from this point on even if this initials venue the hub in this example is compromise they are blind to what happens next the new venue kingdom forums in the example above will only see two new users sign up and send each other encrypted pms to unknown keyids this is overkill for a million different everyday communications but if you want to have a conversation with someone and dont want anybody watching the metadata its the way to go stay aware of what times frequency you check the drop accounts versus your known personas login timesthe first time myoldfriend fucks up and uses your old keyid in a message at the new venue you have to switch to a new set of keys and new venue pgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one great advice heres an additional piece of advice conventionally encrypt the message as well on top of the public key encryption using a string pre agreed upon with aes using gog c this will serve to hide the key ids and message content most reflectively even if you were to use only diceware words even at one trillion combinations per second x it will take the feds longer than the age of the earth to brute force because diceware uses dice to randomly choose words from a list the feds have no option but to use brute force zaphod . i read somewhere that snowden insisted that reporters working with him had to make a new key using an airgapped pc and discard the one they made using their ordinary laptop now about ross did anyone notice his seized encrusted laptop had even folders with his grades and other personal data sad but true . quote from grimforecast on march pmpgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one agreed compartmentalization is key quote from crow of old on march pmexcellent post you just forgot one detail if you set an expiration on your keys say one year or less you further mitigate later impersonations also agreed excellent post ill add that if you upload any of your keys to a keyserver see sig its a good idea to have a revocation certificate ready using a keyserver is purpose specific tho and probably wouldnt apply to most people or at least most keys . quote from quietforest on march amquote from grimforecast on march pmpgp keys are free to create forum accounts are free to create email accounts are free to create map accounts are free to create ira nicks are free to create why use just one agreed compartmentalization is key as ross has found out to his eternal sorrow quote from crow of old on march pmexcellent post you just forgot one detail if you set an expiration on your keys say one year or less you further mitigate later impersonations expirations are a good idea it is also a good idea to securely destroy keys that are no longer needed that way if the shit hits the fan you can not be forced to decrypt old encrusted traffic that the authorities managed to get their hands on if the decrypt key no longer exists then there outta luck unless the other party was so unwise as to keep a copy especially plaintext you always have to keep in mind that the other party may turn out to be a congenial idiot a la ross if thats the case im not sure theres anything you can do except to be careful about what you say so as to keep it non incriminating quote from quietforest on march amalso agreed excellent post ill add that if you upload any of your keys to a keyserver see sig its a good idea to have a revocation certificate ready using a keyserver is purpose specific tho and probably wouldnt apply to most people or at least most keys agreed zaphod . i think its good practice to use pgp on an airgapped machine and transfer messages back and forth . i think its good practice to use pgp on an airgapped machine and transfer messages back and forth . i think its good practice to use pgp on an airgapped machine and transfer messages back and forth . 