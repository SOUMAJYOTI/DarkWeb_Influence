has anyone had any experience with gbde i have been thinking about switching over to freebsd for a desktop os but my comfort zone is with do crypt luks is the program as easy to use . has anyone had any experience with gbde i have been thinking about switching over to freebsd for a desktop os but my comfort zone is with do crypt luks is the program as easy to use . has anyone had any experience with gbde i have been thinking about switching over to freebsd for a desktop os but my comfort zone is with do crypt luks is the program as easy to use . has anyone had any experience with gbde i have been thinking about switching over to freebsd for a desktop os but my comfort zone is with do crypt luks is the program as easy to use . sigh of fine ill go back to friggin openbsd i hate openbsd what kind of os doesnt include its support in . gbde is old and i wouldnt recommend it geli is the replacement and it offers more features that being said freebsd is lacking in exploit mitigations the hardenedbsd org project aims to add some of them but they are not as comprehensive as pax or w x you will probably be more secure with openbsd or gentoo hardened . year give been running with pax grsec for a while now mostly its good my problem with linux generally is system making a dogs dinner of things so if i dont want systemd it is slack gentoo or a bed slack doesnt do arm well and learning gentoo again is like asking for a beer by listing out the individual molecules by proportion instead of saying guinness so is eli as versatile as luks . quote from the real sigaint on march pmthat being said freebsd is lacking in exploit mitigations the hardenedbsd org project aims to add some of them but they are not as comprehensive as pax or w x freebsds lack of aslr in is insane not that defeating aslr is a real hurdle these days but freebsd isn even trying quoteyou will probably be more secure with openbsd or gentoo hardened this . sigh of fine ill go back to friggin openbsd i hate openbsd what kind of os doesnt include its support in . no idea but are you sure about this move security wise i remember reading some articles about how bsd is behind little linus security wise these days . no idea but are you sure about this move security wise i remember reading some articles about how bsd is behind little linus security wise these days . year give been running with pax grsec for a while now mostly its good my problem with linux generally is system making a dogs dinner of things so if i dont want systemd it is slack gentoo or a bed slack doesnt do arm well and learning gentoo again is like asking for a beer by listing out the individual molecules by proportion instead of saying guinness so is eli as versatile as luks . gbde is old and i wouldnt recommend it geli is the replacement and it offers more features that being said freebsd is lacking in exploit mitigations the hardenedbsd org project aims to add some of them but they are not as comprehensive as pax or w x you will probably be more secure with openbsd or gentoo hardened . year give been running with pax grsec for a while now mostly its good my problem with linux generally is system making a dogs dinner of things so if i dont want systemd it is slack gentoo or a bed slack doesnt do arm well and learning gentoo again is like asking for a beer by listing out the individual molecules by proportion instead of saying guinness so is eli as versatile as luks . sigh of fine ill go back to friggin openbsd i hate openbsd what kind of os doesnt include its support in . quote from the real sigaint on march pmthat being said freebsd is lacking in exploit mitigations the hardenedbsd org project aims to add some of them but they are not as comprehensive as pax or w x freebsds lack of aslr in is insane not that defeating aslr is a real hurdle these days but freebsd isn even trying quoteyou will probably be more secure with openbsd or gentoo hardened this . no idea but are you sure about this move security wise i remember reading some articles about how bsd is behind little linus security wise these days . no idea but are you sure about this move security wise i remember reading some articles about how bsd is behind little linus security wise these days . year give been running with pax grsec for a while now mostly its good my problem with linux generally is system making a dogs dinner of things so if i dont want systemd it is slack gentoo or a bed slack doesnt do arm well and learning gentoo again is like asking for a beer by listing out the individual molecules by proportion instead of saying guinness so is eli as versatile as luks . sigh of fine ill go back to friggin openbsd i hate openbsd what kind of os doesnt include its support in . quote from the real sigaint on march pmthat being said freebsd is lacking in exploit mitigations the hardenedbsd org project aims to add some of them but they are not as comprehensive as pax or w x freebsds lack of aslr in is insane not that defeating aslr is a real hurdle these days but freebsd isn even trying quoteyou will probably be more secure with openbsd or gentoo hardened this . gbde is old and i wouldnt recommend it geli is the replacement and it offers more features that being said freebsd is lacking in exploit mitigations the hardenedbsd org project aims to add some of them but they are not as comprehensive as pax or w x you will probably be more secure with openbsd or gentoo hardened . gbde is old and i wouldnt recommend it geli is the replacement and it offers more features that being said freebsd is lacking in exploit mitigations the hardenedbsd org project aims to add some of them but they are not as comprehensive as pax or w x you will probably be more secure with openbsd or gentoo hardened . quote from the real sigaint on march pmthat being said freebsd is lacking in exploit mitigations the hardenedbsd org project aims to add some of them but they are not as comprehensive as pax or w x freebsds lack of aslr in is insane not that defeating aslr is a real hurdle these days but freebsd isn even trying quoteyou will probably be more secure with openbsd or gentoo hardened this . astors security writeup covers a lot o shit i think perhaps the areas he talked about should be addressed in depth this is just my uneducated opinion the first major step in some peoples eyes is deciding on the best os for security this is a summary of my process of elimination for a main os windows mac or nix for this only nix wins the others are closed source cant be reviewed for vulnerabilities they quickly turn useful for people in the context of the joke where you dont need to outrun a bear only your slower friend thinking of ox win as your slow friend is probably your best course of action open source what some may not realize is that the majority of six distributions are not truly open source the main linux kernel relies on binary blobs which are endor supplied in proprietary form to operate as device drivers lurk moar for why this is a really bad idea the vpshot is that if you had concerns about windows or osx for proprietary code reasons you necessarily have the same concerns about the blobs which oss does this leave dont worry it is a really short list dragora dyne colic parabola trisquel gnewsense musix design hurd opened current of the os short list a few may be knocked out due to lack of current support this is a concern due to exploits such as shellshock in case you missed shellshock it was kind of a big deal for people who run anything six dragora has not been dated in two years dyne bolic has not been dated in three years design hurd has not been dated since this leaves parable trisquel gnewsense musix opened security this is partially outside of the which os discussion but you should really consider using grsecurity pax at a minimum for any of these builds excepting openbsd also afaik tbb can be used on all of the remaining oss as an aside i want to make a few notes on this before i get flamed i stuck to mainstream distributions of linux because of the slightly higher chance that there are helpful forums which could assist some sort of software fuckup also to avoid some asshole who just got his bs cs and thinks he can totally make a better operating system his mom totally uses it on her main rig i purposefully did not include any roll your own oss such as using linus libre in gentoo if you are at the point where you are recompiling your own kernel this post was not intended for you the animal effort from the short list in my opinion is trisquel your mileage may vary in case you missed it tails did not make the short list that sucks tails uses binary blobs they dont deny it rutkowskas article about obfuscation vs correctness vs isolation should loom heavy here my approach is that you should use all three and the knockout rounds are way easier if your starting point is correctness firmware hardware and software are all really important but had limited impact on which os is the most secure in isolated consideration there are other ways to discount various linus distributions such as design being the was bitch or whether systemd is the spawn of satan but these are more technical and less philosophically glaring blobs means a real possibility of incorporate or government backdoors you are interested please tell me why i am wrong or what i missed i truly care since n eyes are better than tl dr all oss suck and tails has a dirty secret . astors security writeup covers a lot o shit i think perhaps the areas he talked about should be addressed in depth this is just my uneducated opinion the first major step in some peoples eyes is deciding on the best os for security this is a summary of my process of elimination for a main os windows mac or nix for this only nix wins the others are closed source cant be reviewed for vulnerabilities they quickly turn useful for people in the context of the joke where you dont need to outrun a bear only your slower friend thinking of ox win as your slow friend is probably your best course of action open source what some may not realize is that the majority of six distributions are not truly open source the main linux kernel relies on binary blobs which are endor supplied in proprietary form to operate as device drivers lurk moar for why this is a really bad idea the vpshot is that if you had concerns about windows or osx for proprietary code reasons you necessarily have the same concerns about the blobs which oss does this leave dont worry it is a really short list dragora dyne colic parabola trisquel gnewsense musix design hurd opened current of the os short list a few may be knocked out due to lack of current support this is a concern due to exploits such as shellshock in case you missed shellshock it was kind of a big deal for people who run anything six dragora has not been dated in two years dyne bolic has not been dated in three years design hurd has not been dated since this leaves parable trisquel gnewsense musix opened security this is partially outside of the which os discussion but you should really consider using grsecurity pax at a minimum for any of these builds excepting openbsd also afaik tbb can be used on all of the remaining oss as an aside i want to make a few notes on this before i get flamed i stuck to mainstream distributions of linux because of the slightly higher chance that there are helpful forums which could assist some sort of software fuckup also to avoid some asshole who just got his bs cs and thinks he can totally make a better operating system his mom totally uses it on her main rig i purposefully did not include any roll your own oss such as using linus libre in gentoo if you are at the point where you are recompiling your own kernel this post was not intended for you the animal effort from the short list in my opinion is trisquel your mileage may vary in case you missed it tails did not make the short list that sucks tails uses binary blobs they dont deny it rutkowskas article about obfuscation vs correctness vs isolation should loom heavy here my approach is that you should use all three and the knockout rounds are way easier if your starting point is correctness firmware hardware and software are all really important but had limited impact on which os is the most secure in isolated consideration there are other ways to discount various linus distributions such as design being the was bitch or whether systemd is the spawn of satan but these are more technical and less philosophically glaring blobs means a real possibility of incorporate or government backdoors you are interested please tell me why i am wrong or what i missed i truly care since n eyes are better than tl dr all oss suck and tails has a dirty secret . astors security writeup covers a lot o shit i think perhaps the areas he talked about should be addressed in depth this is just my uneducated opinion the first major step in some peoples eyes is deciding on the best os for security this is a summary of my process of elimination for a main os windows mac or nix for this only nix wins the others are closed source cant be reviewed for vulnerabilities they quickly turn useful for people in the context of the joke where you dont need to outrun a bear only your slower friend thinking of ox win as your slow friend is probably your best course of action open source what some may not realize is that the majority of six distributions are not truly open source the main linux kernel relies on binary blobs which are endor supplied in proprietary form to operate as device drivers lurk moar for why this is a really bad idea the vpshot is that if you had concerns about windows or osx for proprietary code reasons you necessarily have the same concerns about the blobs which oss does this leave dont worry it is a really short list dragora dyne colic parabola trisquel gnewsense musix design hurd opened current of the os short list a few may be knocked out due to lack of current support this is a concern due to exploits such as shellshock in case you missed shellshock it was kind of a big deal for people who run anything six dragora has not been dated in two years dyne bolic has not been dated in three years design hurd has not been dated since this leaves parable trisquel gnewsense musix opened security this is partially outside of the which os discussion but you should really consider using grsecurity pax at a minimum for any of these builds excepting openbsd also afaik tbb can be used on all of the remaining oss as an aside i want to make a few notes on this before i get flamed i stuck to mainstream distributions of linux because of the slightly higher chance that there are helpful forums which could assist some sort of software fuckup also to avoid some asshole who just got his bs cs and thinks he can totally make a better operating system his mom totally uses it on her main rig i purposefully did not include any roll your own oss such as using linus libre in gentoo if you are at the point where you are recompiling your own kernel this post was not intended for you the animal effort from the short list in my opinion is trisquel your mileage may vary in case you missed it tails did not make the short list that sucks tails uses binary blobs they dont deny it rutkowskas article about obfuscation vs correctness vs isolation should loom heavy here my approach is that you should use all three and the knockout rounds are way easier if your starting point is correctness firmware hardware and software are all really important but had limited impact on which os is the most secure in isolated consideration there are other ways to discount various linus distributions such as design being the was bitch or whether systemd is the spawn of satan but these are more technical and less philosophically glaring blobs means a real possibility of incorporate or government backdoors you are interested please tell me why i am wrong or what i missed i truly care since n eyes are better than tl dr all oss suck and tails has a dirty secret . most linus distros have blows its a sad state of affairs openbsd doesnt have any blobs in fact they even removed readable kernel module support because they saw it as a backdoor thank god we used to root linus machines back in the day and use kernel modules to maintain persistence . the openbsd kernel has supported fuse for at least a year now it should be possible to run its on fuse but it wont be fast . i never thought this would happen but i am going to regret hating opened arent i damn you theo . i never thought this would happen but i am going to regret hating opened arent i damn you theo . the openbsd kernel has supported fuse for at least a year now it should be possible to run its on fuse but it wont be fast . openbsd is a prime example of the rule that security is intensely proportional to ease of use edit perhaps it is a roundabout barrier to entry unfix graybeards perhaps used its support as a way to eliminate undesirables . quote from crow of old on march sigh of fine ill go back to friggin openbsd i hate openbsd what kind of os doesnt include its support in i can just hear the now thats not a bug thats a feature zaphod . the openbsd kernel has supported fuse for at least a year now it should be possible to run its on fuse but it wont be fast . most linus distros have blows its a sad state of affairs openbsd doesnt have any blobs in fact they even removed readable kernel module support because they saw it as a backdoor thank god we used to root linus machines back in the day and use kernel modules to maintain persistence . quote from crow of old on march sigh of fine ill go back to friggin openbsd i hate openbsd what kind of os doesnt include its support in i can just hear the now thats not a bug thats a feature zaphod . openbsd is a prime example of the rule that security is intensely proportional to ease of use edit perhaps it is a roundabout barrier to entry unfix graybeards perhaps used its support as a way to eliminate undesirables . the openbsd kernel has supported fuse for at least a year now it should be possible to run its on fuse but it wont be fast . openbsd is a prime example of the rule that security is intensely proportional to ease of use edit perhaps it is a roundabout barrier to entry unfix graybeards perhaps used its support as a way to eliminate undesirables . most linus distros have blows its a sad state of affairs openbsd doesnt have any blobs in fact they even removed readable kernel module support because they saw it as a backdoor thank god we used to root linus machines back in the day and use kernel modules to maintain persistence . quote from crow of old on march sigh of fine ill go back to friggin openbsd i hate openbsd what kind of os doesnt include its support in i can just hear the now thats not a bug thats a feature zaphod . openbsd is a prime example of the rule that security is intensely proportional to ease of use edit perhaps it is a roundabout barrier to entry unfix graybeards perhaps used its support as a way to eliminate undesirables . i never thought this would happen but i am going to regret hating opened arent i damn you theo . quote from crow of old on march sigh of fine ill go back to friggin openbsd i hate openbsd what kind of os doesnt include its support in i can just hear the now thats not a bug thats a feature zaphod . many good points here and i will try add some things are not state so chances are some remarks from past year dont hold true today so we often have to reevaluate things now concerning bsd wasnt there some bad press about the rng or something and how it weakened crypts even those guys behind librem have been criticise by coreboot developers so it aint that easy to take something for granted anyway ms rutkowska is so sex and clever what a combo so i wonder what your take on qubes is but very good point that all three are important i agree that trisquell looks the good thing these days compared to the other options though i see many fellows getting what they find convenient and customizing it as far as they can go . many good points here and i will try add some things are not state so chances are some remarks from past year dont hold true today so we often have to reevaluate things now concerning bsd wasnt there some bad press about the rng or something and how it weakened crypts even those guys behind librem have been criticise by coreboot developers so it aint that easy to take something for granted anyway ms rutkowska is so sex and clever what a combo so i wonder what your take on qubes is but very good point that all three are important i agree that trisquell looks the good thing these days compared to the other options though i see many fellows getting what they find convenient and customizing it as far as they can go . many good points here and i will try add some things are not state so chances are some remarks from past year dont hold true today so we often have to reevaluate things now concerning bsd wasnt there some bad press about the rng or something and how it weakened crypts even those guys behind librem have been criticise by coreboot developers so it aint that easy to take something for granted anyway ms rutkowska is so sex and clever what a combo so i wonder what your take on qubes is but very good point that all three are important i agree that trisquell looks the good thing these days compared to the other options though i see many fellows getting what they find convenient and customizing it as far as they can go . quotei wonder what your take on qubes isi have four points of contention with using tubes os binary blobs ignoring obfuscation and correctness ignoring firmware pitfalls requiring recommending bad hardwarelets dig in binary blobsjust just read this thread second post furthermore the xen hypervisor itself works with binary blobs see under code see also a personal note i think that rutkowskas reply was an intellectual throwing up of the hands you cant just accept a problem because it is persuasive shes certainly talented enough to fix such a problem but she seems to have surrendered instead ignoring obfuscation and correctnessfrom qubes faqs the devs feel as though either of the other two approaches are not reasonable sources of security qubes focuses on protecting from vulnerabilities in software but not on maintaining your anonymity the way tails does i personally appreciate trying to be mindful of all three areas ignoring firmware pitfallsalthough tubes uses iommu it d to prevent dma attacks xen still must boot after the rest of the machine starts up see i dont think many people know how much extra code is mobilize in the bootup process further a user who relies on any hardware backdoor mitigation from tubes design is in for a world of hurt due to potential firmware backdoors in other devices that need not communicate with the main machine such as keyboard firmware related oob to amt note the example is a hypothetically i have no idea whether that is a probable attack vector requiring recommending bad hardwarefrom qubesos own hardware compatibility list i picked a laptop from this lineup the lenovo thinkpad t running a i m procssor according to that processor has vero on the qubesos list the laptop was listed as having green status in all elegant fields which they equate with having their highers security level this of course means that the qubes devs have either ignored the oob bullshit or think that isolation has saved them at this point i have surpassed my technical understanding of the matter and only rely on my instincts to say that any group that recommends a vero machine is not concerned with your security . quotei wonder what your take on qubes isi have four points of contention with using tubes os binary blobs ignoring obfuscation and correctness ignoring firmware pitfalls requiring recommending bad hardwarelets dig in binary blobsjust just read this thread second post furthermore the xen hypervisor itself works with binary blobs see under code see also a personal note i think that rutkowskas reply was an intellectual throwing up of the hands you cant just accept a problem because it is persuasive shes certainly talented enough to fix such a problem but she seems to have surrendered instead ignoring obfuscation and correctnessfrom qubes faqs the devs feel as though either of the other two approaches are not reasonable sources of security qubes focuses on protecting from vulnerabilities in software but not on maintaining your anonymity the way tails does i personally appreciate trying to be mindful of all three areas ignoring firmware pitfallsalthough tubes uses iommu it d to prevent dma attacks xen still must boot after the rest of the machine starts up see i dont think many people know how much extra code is mobilize in the bootup process further a user who relies on any hardware backdoor mitigation from tubes design is in for a world of hurt due to potential firmware backdoors in other devices that need not communicate with the main machine such as keyboard firmware related oob to amt note the example is a hypothetically i have no idea whether that is a probable attack vector requiring recommending bad hardwarefrom qubesos own hardware compatibility list i picked a laptop from this lineup the lenovo thinkpad t running a i m procssor according to that processor has vero on the qubesos list the laptop was listed as having green status in all elegant fields which they equate with having their highers security level this of course means that the qubes devs have either ignored the oob bullshit or think that isolation has saved them at this point i have surpassed my technical understanding of the matter and only rely on my instincts to say that any group that recommends a vero machine is not concerned with your security . quotei wonder what your take on qubes isi have four points of contention with using tubes os binary blobs ignoring obfuscation and correctness ignoring firmware pitfalls requiring recommending bad hardwarelets dig in binary blobsjust just read this thread second post furthermore the xen hypervisor itself works with binary blobs see under code see also a personal note i think that rutkowskas reply was an intellectual throwing up of the hands you cant just accept a problem because it is persuasive shes certainly talented enough to fix such a problem but she seems to have surrendered instead ignoring obfuscation and correctnessfrom qubes faqs the devs feel as though either of the other two approaches are not reasonable sources of security qubes focuses on protecting from vulnerabilities in software but not on maintaining your anonymity the way tails does i personally appreciate trying to be mindful of all three areas ignoring firmware pitfallsalthough tubes uses iommu it d to prevent dma attacks xen still must boot after the rest of the machine starts up see i dont think many people know how much extra code is mobilize in the bootup process further a user who relies on any hardware backdoor mitigation from tubes design is in for a world of hurt due to potential firmware backdoors in other devices that need not communicate with the main machine such as keyboard firmware related oob to amt note the example is a hypothetically i have no idea whether that is a probable attack vector requiring recommending bad hardwarefrom qubesos own hardware compatibility list i picked a laptop from this lineup the lenovo thinkpad t running a i m procssor according to that processor has vero on the qubesos list the laptop was listed as having green status in all elegant fields which they equate with having their highers security level this of course means that the qubes devs have either ignored the oob bullshit or think that isolation has saved them at this point i have surpassed my technical understanding of the matter and only rely on my instincts to say that any group that recommends a vero machine is not concerned with your security . quote from flashy on march pmnow concerning bed wasnt there some bad press about the rng or something and how it weakened cryptothat was freed not opened freebsd constantly makes stupid security mistakes . about eli yes i think it is as flexible as luks based on the last time i actually used lurks openbsd is quite minimalistic low amounts of code means that audits are actually possible and bugs get fixed before they become disasters . quote from flashy on march pmnow concerning bed wasnt there some bad press about the rng or something and how it weakened cryptothat was freed not opened freebsd constantly makes stupid security mistakes . about eli yes i think it is as flexible as luks based on the last time i actually used lurks openbsd is quite minimalistic low amounts of code means that audits are actually possible and bugs get fixed before they become disasters . about eli yes i think it is as flexible as luks based on the last time i actually used lurks openbsd is quite minimalistic low amounts of code means that audits are actually possible and bugs get fixed before they become disasters . quote from flashy on march pmnow concerning bed wasnt there some bad press about the rng or something and how it weakened cryptothat was freed not opened freebsd constantly makes stupid security mistakes . about eli yes i think it is as flexible as luks based on the last time i actually used lurks openbsd is quite minimalistic low amounts of code means that audits are actually possible and bugs get fixed before they become disasters . thanks i got very friendly with luks after the truecrypt crew went weird . thanks i got very friendly with luks after the truecrypt crew went weird . thanks i got very friendly with luks after the truecrypt crew went weird . quote from crow of old on march pmopenbsd is a prime example of the rule that security is intensely proportional to ease of use indeed quote from crow of old on march pmedit perhaps it is a roundabout barrier to entry unfix graybeards perhaps used its support as a way to eliminate undesirables i had the very same thoughts myself zaphod . quote from crow of old on march pmopenbsd is a prime example of the rule that security is intensely proportional to ease of use indeed quote from crow of old on march pmedit perhaps it is a roundabout barrier to entry unfix graybeards perhaps used its support as a way to eliminate undesirables i had the very same thoughts myself zaphod . thanks i got very friendly with luks after the truecrypt crew went weird . quote from crow of old on march pmopenbsd is a prime example of the rule that security is intensely proportional to ease of use indeed quote from crow of old on march pmedit perhaps it is a roundabout barrier to entry unfix graybeards perhaps used its support as a way to eliminate undesirables i had the very same thoughts myself zaphod . quote from crow of old on march pmopenbsd is a prime example of the rule that security is intensely proportional to ease of use indeed quote from crow of old on march pmedit perhaps it is a roundabout barrier to entry unfix graybeards perhaps used its support as a way to eliminate undesirables i had the very same thoughts myself zaphod . i have to agree that qubes often looks like work in progress maybe something like some intellectual experiment still interesting though now concerning tails and firmware attacks and the like here is some fresh news very disturbing i almost cried and i always suspected efi is evil while there s little evidence of bios bootkits in the wild the ant catalog and the recent disclosure of the equation group s cyberespionage platform in particular module nls w dll that reprograms firmware from most major vendors leave little doubt that attacks against hardware are leaving the realm of academics and white hats tomorrow at the cansecwest conference in vancouver researchers corey kallenberg and xeno kovah formerly of mitre and founders of startup legbacore will deliver research on new bios vulnerabilities and present a working rootkit implant into bios most bios have protections from modifications kallenberg told threatpost we found a way to automate the discovery of vulnerabilities this space and break past those protections kallenberg said an attacker would need to already have remote access to a compromise computer in order to execute the implant and elevate privileges on the machine through the hardware their exploit turns down existing protections in place to prevent re flashing of the firmware enabling the implant to be inserted and executed the devious part of their exploit is that they ve found a way to insert their agent into system management mode which is used by firmware and runs separately from the operating system managing various hardware controls system management mode also has access to memory which puts supposed secure operating systems such as tails in the line of fire of the implant tails is a privacy accused operating system that runs off removal media such as us stick and whose aim is privacy and anonymity the idea is that if the os is compromise by an implant it s ok to use tails for communication all internet connections are made through the tor browser because it s shield from the malware that hit the main operating system kallenberg said what the implant does is it waits for tails to boot and scrapes sensitive data out of memory and exfiltrates it out our agent listens in the background tails doesn t see it their plant the researchers said is able to scrape the secret pgp key tails uses for encrusted communication for example it can also steal passwords and encrusted communication the plant survives os re installation and even tails built in protections including its capability of wiping ram we store data in a non volatile area and it s not erased kallenberg said the idea is to make it obvious that these secure boot disk style things are architectural vulnerable to attackers who come at you from the bios level space kovah said that architectural changes to the bios successor uefi introduced modularity in order to simplify development but that modularity which is swelled out in the open source reference implementation of uefi is what can be abused it s also what many vendors have based their code on kovah explained that common code exists in the bios variants from different vendors and that code makes it possible to reliably install implants across the different makes and models the open source reference implementation explains how data is passed and there are well defined locations where to transfer internally to the bios kovah said you can look at the open source reference to look for patterns and see where the same data exists in closed source versions those common reference points define hook locations an attacker may place code at those locations kovah said and that up to models from five vendors all share the same code or variants of the same code because of that you can reliably automate the search of strings for hooking place hooks and insert code kovah said kovah said an attacker criminal or nation state can also infect the bios with physical access to a computer such as at a border crossing in a demo shared with threatpost using a dediprog flash programmer kovah was able to physically clip a connector cable onto the bios and download an implant that way this can be used at a border crossing in an evil maid attack or other physical interdiction attacks he said if you have access it takes about two minutes once you find the bios the idea is to give this to the instilled give them a target open the computer connect and press start it takes about seconds to re flash the chip the point here is that even if you think you re doing strong op sec by using tails or not carrying a hard drive it doesn t matter kovah said two minutes of physical access and you can own any os the situation isn t entirely bleak the researchers said that vendors do a solid job of patching vulnerabilities that are reported to them but need to improve secure coding practices and put more effort into vulnerability mitigations as time goes on and the cost of exploitation gets higher because more bugs get killed off and new techniques make it harder to exploit i think that attacking bios will be more appealing because of the persistence on that system kallenberg said . man those are some dastardly dudes what amazes me is that they can install enough code into a bios so that it can monitor keystrokes steal keys and send them on via network calls or some such i didnt even think bios code has access to the application stack for tcp ip comms etc but what do i know not a lot . i have to agree that qubes often looks like work in progress maybe something like some intellectual experiment still interesting though now concerning tails and firmware attacks and the like here is some fresh news very disturbing i almost cried and i always suspected efi is evil while there s little evidence of bios bootkits in the wild the ant catalog and the recent disclosure of the equation group s cyberespionage platform in particular module nls w dll that reprograms firmware from most major vendors leave little doubt that attacks against hardware are leaving the realm of academics and white hats tomorrow at the cansecwest conference in vancouver researchers corey kallenberg and xeno kovah formerly of mitre and founders of startup legbacore will deliver research on new bios vulnerabilities and present a working rootkit implant into bios most bios have protections from modifications kallenberg told threatpost we found a way to automate the discovery of vulnerabilities this space and break past those protections kallenberg said an attacker would need to already have remote access to a compromise computer in order to execute the implant and elevate privileges on the machine through the hardware their exploit turns down existing protections in place to prevent re flashing of the firmware enabling the implant to be inserted and executed the devious part of their exploit is that they ve found a way to insert their agent into system management mode which is used by firmware and runs separately from the operating system managing various hardware controls system management mode also has access to memory which puts supposed secure operating systems such as tails in the line of fire of the implant tails is a privacy accused operating system that runs off removal media such as us stick and whose aim is privacy and anonymity the idea is that if the os is compromise by an implant it s ok to use tails for communication all internet connections are made through the tor browser because it s shield from the malware that hit the main operating system kallenberg said what the implant does is it waits for tails to boot and scrapes sensitive data out of memory and exfiltrates it out our agent listens in the background tails doesn t see it their plant the researchers said is able to scrape the secret pgp key tails uses for encrusted communication for example it can also steal passwords and encrusted communication the plant survives os re installation and even tails built in protections including its capability of wiping ram we store data in a non volatile area and it s not erased kallenberg said the idea is to make it obvious that these secure boot disk style things are architectural vulnerable to attackers who come at you from the bios level space kovah said that architectural changes to the bios successor uefi introduced modularity in order to simplify development but that modularity which is swelled out in the open source reference implementation of uefi is what can be abused it s also what many vendors have based their code on kovah explained that common code exists in the bios variants from different vendors and that code makes it possible to reliably install implants across the different makes and models the open source reference implementation explains how data is passed and there are well defined locations where to transfer internally to the bios kovah said you can look at the open source reference to look for patterns and see where the same data exists in closed source versions those common reference points define hook locations an attacker may place code at those locations kovah said and that up to models from five vendors all share the same code or variants of the same code because of that you can reliably automate the search of strings for hooking place hooks and insert code kovah said kovah said an attacker criminal or nation state can also infect the bios with physical access to a computer such as at a border crossing in a demo shared with threatpost using a dediprog flash programmer kovah was able to physically clip a connector cable onto the bios and download an implant that way this can be used at a border crossing in an evil maid attack or other physical interdiction attacks he said if you have access it takes about two minutes once you find the bios the idea is to give this to the instilled give them a target open the computer connect and press start it takes about seconds to re flash the chip the point here is that even if you think you re doing strong op sec by using tails or not carrying a hard drive it doesn t matter kovah said two minutes of physical access and you can own any os the situation isn t entirely bleak the researchers said that vendors do a solid job of patching vulnerabilities that are reported to them but need to improve secure coding practices and put more effort into vulnerability mitigations as time goes on and the cost of exploitation gets higher because more bugs get killed off and new techniques make it harder to exploit i think that attacking bios will be more appealing because of the persistence on that system kallenberg said . man those are some dastardly dudes what amazes me is that they can install enough code into a bios so that it can monitor keystrokes steal keys and send them on via network calls or some such i didnt even think bios code has access to the application stack for tcp ip comms etc but what do i know not a lot . i have to agree that qubes often looks like work in progress maybe something like some intellectual experiment still interesting though now concerning tails and firmware attacks and the like here is some fresh news very disturbing i almost cried and i always suspected efi is evil while there s little evidence of bios bootkits in the wild the ant catalog and the recent disclosure of the equation group s cyberespionage platform in particular module nls w dll that reprograms firmware from most major vendors leave little doubt that attacks against hardware are leaving the realm of academics and white hats tomorrow at the cansecwest conference in vancouver researchers corey kallenberg and xeno kovah formerly of mitre and founders of startup legbacore will deliver research on new bios vulnerabilities and present a working rootkit implant into bios most bios have protections from modifications kallenberg told threatpost we found a way to automate the discovery of vulnerabilities this space and break past those protections kallenberg said an attacker would need to already have remote access to a compromise computer in order to execute the implant and elevate privileges on the machine through the hardware their exploit turns down existing protections in place to prevent re flashing of the firmware enabling the implant to be inserted and executed the devious part of their exploit is that they ve found a way to insert their agent into system management mode which is used by firmware and runs separately from the operating system managing various hardware controls system management mode also has access to memory which puts supposed secure operating systems such as tails in the line of fire of the implant tails is a privacy accused operating system that runs off removal media such as us stick and whose aim is privacy and anonymity the idea is that if the os is compromise by an implant it s ok to use tails for communication all internet connections are made through the tor browser because it s shield from the malware that hit the main operating system kallenberg said what the implant does is it waits for tails to boot and scrapes sensitive data out of memory and exfiltrates it out our agent listens in the background tails doesn t see it their plant the researchers said is able to scrape the secret pgp key tails uses for encrusted communication for example it can also steal passwords and encrusted communication the plant survives os re installation and even tails built in protections including its capability of wiping ram we store data in a non volatile area and it s not erased kallenberg said the idea is to make it obvious that these secure boot disk style things are architectural vulnerable to attackers who come at you from the bios level space kovah said that architectural changes to the bios successor uefi introduced modularity in order to simplify development but that modularity which is swelled out in the open source reference implementation of uefi is what can be abused it s also what many vendors have based their code on kovah explained that common code exists in the bios variants from different vendors and that code makes it possible to reliably install implants across the different makes and models the open source reference implementation explains how data is passed and there are well defined locations where to transfer internally to the bios kovah said you can look at the open source reference to look for patterns and see where the same data exists in closed source versions those common reference points define hook locations an attacker may place code at those locations kovah said and that up to models from five vendors all share the same code or variants of the same code because of that you can reliably automate the search of strings for hooking place hooks and insert code kovah said kovah said an attacker criminal or nation state can also infect the bios with physical access to a computer such as at a border crossing in a demo shared with threatpost using a dediprog flash programmer kovah was able to physically clip a connector cable onto the bios and download an implant that way this can be used at a border crossing in an evil maid attack or other physical interdiction attacks he said if you have access it takes about two minutes once you find the bios the idea is to give this to the instilled give them a target open the computer connect and press start it takes about seconds to re flash the chip the point here is that even if you think you re doing strong op sec by using tails or not carrying a hard drive it doesn t matter kovah said two minutes of physical access and you can own any os the situation isn t entirely bleak the researchers said that vendors do a solid job of patching vulnerabilities that are reported to them but need to improve secure coding practices and put more effort into vulnerability mitigations as time goes on and the cost of exploitation gets higher because more bugs get killed off and new techniques make it harder to exploit i think that attacking bios will be more appealing because of the persistence on that system kallenberg said . man those are some dastardly dudes what amazes me is that they can install enough code into a bios so that it can monitor keystrokes steal keys and send them on via network calls or some such i didnt even think bios code has access to the application stack for tcp ip comms etc but what do i know not a lot . its more like bios for example . great and very information thread to all of you also thanks for mentioning opened give read their wikipedia article and it sounds very interesting albeit difficult to master well a worthy challenge so matured hardware coreboot openbsd and were good to go . its more like bios for example . its more like bios for example . great and very information thread to all of you also thanks for mentioning opened give read their wikipedia article and it sounds very interesting albeit difficult to master well a worthy challenge so matured hardware coreboot openbsd and were good to go . great and very information thread to all of you also thanks for mentioning opened give read their wikipedia article and it sounds very interesting albeit difficult to master well a worthy challenge so matured hardware coreboot openbsd and were good to go . if your cpu has vero you are in for some nasty surprise that evil vpro is a kvm server built right into the hardware no matter what nice encrypted os you use and those cheap atoms have their backdoor called smartconnect to download your emails and im while your happy is off sleeping and we know what that means if it can download it can sure upload as well i wonder if any wise person these days buys intel when coreboot developer said a firmware could steal all your comms there were smartasses calling him paranoid and lintel already does that with smartconnectanyway the issue with coreboot is that even with certified hardware it still aint that easy to install at least with desktop motherboards there should be some easier solution even if some special hardware was needed what about a ready to go kit with a beagle flashed to serve as a flasher and a ready to go clamp without any need to connect extra cables just clamp the chip and fire up beagle anyway coreboot is something like linux years ago it needs more support and work . quote from crow of old on march amif you are going to use opened i recommend absolute openbsd nd edition for reference material but year sounds like a good setup to me note for machine os only use to middleboxen and pf for firewalling all rights reserved side effects may include constipation nausea and erection dysfunction other terms and conditions may apply your mileage may vary the hub is not responsible for bad opsec leading to your ass getting violated in jail thanks for your recommendation will check it out ill keep your words in mind quote from flashy on march pmif your cpu has vero you are in for some nasty surprise that evil vpro is a kvm server built right into the hardware no matter what nice encrypted os you use and those cheap atoms have their backdoor called smartconnect to download your emails and im while your happy is off sleeping and we know what that means if it can download it can sure upload as well i wonder if any wise person these days buys intel when coreboot developer said a firmware could steal all your comms there were smartasses calling him paranoid and lintel already does that with smartconnectanyway the issue with coreboot is that even with certified hardware it still aint that easy to install at least with desktop motherboards there should be some easier solution even if some special hardware was needed what about a ready to go kit with a beagle flashed to serve as a flasher and a ready to go clamp without any need to connect extra cables just clamp the chip and fire up beagle anyway coreboot is something like linux years ago it needs more support and worki didnt know that therefore your information is also much appreciated ill take this into consideration when looking out for new hardware if its not too much to ask i think a lot of people myself included who arent really teach savvy would appreciate some sort of guide or list regarding technologies which should be avoided like the plague . if you are going to use opened i recommend absolute openbsd nd edition for reference material but year sounds like a good setup to me note for machine os only use to middleboxen and pf for firewalling all rights reserved side effects may include constipation nausea and erection dysfunction other terms and conditions may apply your mileage may vary the hub is not responsible for bad opsec leading to your ass getting violated in jail . if you are going to use opened i recommend absolute openbsd nd edition for reference material but year sounds like a good setup to me note for machine os only use to middleboxen and pf for firewalling all rights reserved side effects may include constipation nausea and erection dysfunction other terms and conditions may apply your mileage may vary the hub is not responsible for bad opsec leading to your ass getting violated in jail . if your cpu has vero you are in for some nasty surprise that evil vpro is a kvm server built right into the hardware no matter what nice encrypted os you use and those cheap atoms have their backdoor called smartconnect to download your emails and im while your happy is off sleeping and we know what that means if it can download it can sure upload as well i wonder if any wise person these days buys intel when coreboot developer said a firmware could steal all your comms there were smartasses calling him paranoid and lintel already does that with smartconnectanyway the issue with coreboot is that even with certified hardware it still aint that easy to install at least with desktop motherboards there should be some easier solution even if some special hardware was needed what about a ready to go kit with a beagle flashed to serve as a flasher and a ready to go clamp without any need to connect extra cables just clamp the chip and fire up beagle anyway coreboot is something like linux years ago it needs more support and work . quote from crow of old on march amif you are going to use opened i recommend absolute openbsd nd edition for reference material but year sounds like a good setup to me note for machine os only use to middleboxen and pf for firewalling all rights reserved side effects may include constipation nausea and erection dysfunction other terms and conditions may apply your mileage may vary the hub is not responsible for bad opsec leading to your ass getting violated in jail thanks for your recommendation will check it out ill keep your words in mind quote from flashy on march pmif your cpu has vero you are in for some nasty surprise that evil vpro is a kvm server built right into the hardware no matter what nice encrypted os you use and those cheap atoms have their backdoor called smartconnect to download your emails and im while your happy is off sleeping and we know what that means if it can download it can sure upload as well i wonder if any wise person these days buys intel when coreboot developer said a firmware could steal all your comms there were smartasses calling him paranoid and lintel already does that with smartconnectanyway the issue with coreboot is that even with certified hardware it still aint that easy to install at least with desktop motherboards there should be some easier solution even if some special hardware was needed what about a ready to go kit with a beagle flashed to serve as a flasher and a ready to go clamp without any need to connect extra cables just clamp the chip and fire up beagle anyway coreboot is something like linux years ago it needs more support and worki didnt know that therefore your information is also much appreciated ill take this into consideration when looking out for new hardware if its not too much to ask i think a lot of people myself included who arent really teach savvy would appreciate some sort of guide or list regarding technologies which should be avoided like the plague . if your cpu has vero you are in for some nasty surprise that evil vpro is a kvm server built right into the hardware no matter what nice encrypted os you use and those cheap atoms have their backdoor called smartconnect to download your emails and im while your happy is off sleeping and we know what that means if it can download it can sure upload as well i wonder if any wise person these days buys intel when coreboot developer said a firmware could steal all your comms there were smartasses calling him paranoid and lintel already does that with smartconnectanyway the issue with coreboot is that even with certified hardware it still aint that easy to install at least with desktop motherboards there should be some easier solution even if some special hardware was needed what about a ready to go kit with a beagle flashed to serve as a flasher and a ready to go clamp without any need to connect extra cables just clamp the chip and fire up beagle anyway coreboot is something like linux years ago it needs more support and work . quote from crow of old on march amif you are going to use opened i recommend absolute openbsd nd edition for reference material but year sounds like a good setup to me note for machine os only use to middleboxen and pf for firewalling all rights reserved side effects may include constipation nausea and erection dysfunction other terms and conditions may apply your mileage may vary the hub is not responsible for bad opsec leading to your ass getting violated in jail thanks for your recommendation will check it out ill keep your words in mind quote from flashy on march pmif your cpu has vero you are in for some nasty surprise that evil vpro is a kvm server built right into the hardware no matter what nice encrypted os you use and those cheap atoms have their backdoor called smartconnect to download your emails and im while your happy is off sleeping and we know what that means if it can download it can sure upload as well i wonder if any wise person these days buys intel when coreboot developer said a firmware could steal all your comms there were smartasses calling him paranoid and lintel already does that with smartconnectanyway the issue with coreboot is that even with certified hardware it still aint that easy to install at least with desktop motherboards there should be some easier solution even if some special hardware was needed what about a ready to go kit with a beagle flashed to serve as a flasher and a ready to go clamp without any need to connect extra cables just clamp the chip and fire up beagle anyway coreboot is something like linux years ago it needs more support and worki didnt know that therefore your information is also much appreciated ill take this into consideration when looking out for new hardware if its not too much to ask i think a lot of people myself included who arent really teach savvy would appreciate some sort of guide or list regarding technologies which should be avoided like the plague . if you are going to use opened i recommend absolute openbsd nd edition for reference material but year sounds like a good setup to me note for machine os only use to middleboxen and pf for firewalling all rights reserved side effects may include constipation nausea and erection dysfunction other terms and conditions may apply your mileage may vary the hub is not responsible for bad opsec leading to your ass getting violated in jail . the worst of the worst is vero check some lintel promotion videos from years ago and see how evil it is most i and i even some i have this now some people will say you have to go way back to find some intel with no backdoors and opinions vary here are some different thoughts on that according to clearnet from around intel started putting special components in their chipsets combinations of chips that work together on atop motherboards to allow the automatic management of systems over a network this is called lintel active management technology and means that an it technical in a large office university it suite can update software or do other things to machines without having to be physically near them the problem of course is that the same functionality can be abused to install spyware or manipulate the systems in other ways all laptops made after contain these chipsets and are therefore vulnerable to these types of attacks when they are on a network the intel chipset is the most recently made chipset without this automatable feature and hence lends itself to a incurable motherboard computer when choosing a laptop you can see what its chipset is on the specification there are only a handful of machines that can be confidently secured against remote hardware firmware and chipset accessibility current the model that is being most frequently secured in this way is the iim thinkpad x and x s it has an intel chipset ie pre amt and specialist work can be done to secure the hardware and firmware the proprietary firmware can be replaced by open source firmware coreboot also this clearnet link in mind that installing coreboot on those old lenovo is definitely not for the fainthearted there is some online site selling patched laptops for a price and also keep in mind those older laptops may not be that powerful for your needsamd look like a safer bet but who knows but still better than nothing as for intel centrino technology was made in israel so chances are centring laptops already took off with the best in spy tech now concerning arm and the like of banana pi it doesnt look bad so far but ability is not very good for the moment i mean you cant just fire up a pi with tails and do your thing hopefully this will change in the future though my bet is on baikal imagine using russian technology and drinking vodka while on the job how cool is that need more people on the lookout for good hardware and keep pressuring for better cpus and no locked firmware . the worst of the worst is vero check some lintel promotion videos from years ago and see how evil it is most i and i even some i have this now some people will say you have to go way back to find some intel with no backdoors and opinions vary here are some different thoughts on that according to clearnet from around intel started putting special components in their chipsets combinations of chips that work together on atop motherboards to allow the automatic management of systems over a network this is called lintel active management technology and means that an it technical in a large office university it suite can update software or do other things to machines without having to be physically near them the problem of course is that the same functionality can be abused to install spyware or manipulate the systems in other ways all laptops made after contain these chipsets and are therefore vulnerable to these types of attacks when they are on a network the intel chipset is the most recently made chipset without this automatable feature and hence lends itself to a incurable motherboard computer when choosing a laptop you can see what its chipset is on the specification there are only a handful of machines that can be confidently secured against remote hardware firmware and chipset accessibility current the model that is being most frequently secured in this way is the iim thinkpad x and x s it has an intel chipset ie pre amt and specialist work can be done to secure the hardware and firmware the proprietary firmware can be replaced by open source firmware coreboot also this clearnet link in mind that installing coreboot on those old lenovo is definitely not for the fainthearted there is some online site selling patched laptops for a price and also keep in mind those older laptops may not be that powerful for your needsamd look like a safer bet but who knows but still better than nothing as for intel centrino technology was made in israel so chances are centring laptops already took off with the best in spy tech now concerning arm and the like of banana pi it doesnt look bad so far but ability is not very good for the moment i mean you cant just fire up a pi with tails and do your thing hopefully this will change in the future though my bet is on baikal imagine using russian technology and drinking vodka while on the job how cool is that need more people on the lookout for good hardware and keep pressuring for better cpus and no locked firmware . the worst of the worst is vero check some lintel promotion videos from years ago and see how evil it is most i and i even some i have this now some people will say you have to go way back to find some intel with no backdoors and opinions vary here are some different thoughts on that according to clearnet from around intel started putting special components in their chipsets combinations of chips that work together on atop motherboards to allow the automatic management of systems over a network this is called lintel active management technology and means that an it technical in a large office university it suite can update software or do other things to machines without having to be physically near them the problem of course is that the same functionality can be abused to install spyware or manipulate the systems in other ways all laptops made after contain these chipsets and are therefore vulnerable to these types of attacks when they are on a network the intel chipset is the most recently made chipset without this automatable feature and hence lends itself to a incurable motherboard computer when choosing a laptop you can see what its chipset is on the specification there are only a handful of machines that can be confidently secured against remote hardware firmware and chipset accessibility current the model that is being most frequently secured in this way is the iim thinkpad x and x s it has an intel chipset ie pre amt and specialist work can be done to secure the hardware and firmware the proprietary firmware can be replaced by open source firmware coreboot also this clearnet link in mind that installing coreboot on those old lenovo is definitely not for the fainthearted there is some online site selling patched laptops for a price and also keep in mind those older laptops may not be that powerful for your needsamd look like a safer bet but who knows but still better than nothing as for intel centrino technology was made in israel so chances are centring laptops already took off with the best in spy tech now concerning arm and the like of banana pi it doesnt look bad so far but ability is not very good for the moment i mean you cant just fire up a pi with tails and do your thing hopefully this will change in the future though my bet is on baikal imagine using russian technology and drinking vodka while on the job how cool is that need more people on the lookout for good hardware and keep pressuring for better cpus and no locked firmware . 