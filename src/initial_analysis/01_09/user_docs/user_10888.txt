quote from of pwmolzg i on february pmnow that people are getting familiar with multisig addresses there is one last component needed in order for people to do off site trades with confidence mutually assured destruction in short its a economic method of it costs you more to screw me than to be honest and thats true for both partieslets imagine a buyer and a seller and they create a of multisig the buyer wants to buy bitin worth of product the buyer puts up bitcoin in the address and the seller puts in say bitcoin and then mails the product i have made the seller put up less because he must also lose the product before he is paid but in the end it doesnt matter they can put up the same amount as long as its more than the btc cost of the trade so the multisig address has bitcoins in it and the product is shipped because the product isnt shipped until all bitcoins form the buyer are in the address the seller knows it would cost the buyer more to screw him over than to play honest so by merely funding the address the buyer proves he doesnt intend to scam and additional because the buyer never need know who the seller is ill or what his address is the seller can also be confident of the legitimacy of the buyer assuming the seller has good anonymous shipping procedures once the buyer receives his product he has incentive to pay the seller because the same transaction that pays the seller also refunds him bitcoins back if he screws the seller over hes out his whole bitcoins instead of just the cost of the product so he creates a transaction to send himself and send the seller the sellers original two plus one more for the cost of the trade if the buyer doesnt create this exact transaction the seller wont sign it and the buyer cant get his bitcoins back the important thing here is that the amount each party deposits into the multisig is more than the cost of the trade but still a small enough amount that if there is a problem or one party is unfaithful that its small enough that youre willing to lose it in order to spite the other guy for scamming you so like if the seller sends bad product the buyer can simply choose to sacrifice his money in order to ensure the seller doesnt get paid doing business in this manner allows both parties to have confidence in the other because it is more costly to scam than to do honest business and at no point can one person screw the other without himself getting hurt the only place where there is imbalance is in the funding of the multisig at some point somebody has to send first however the risk associated with that is mitigate by two things first that the other party cant steal the funds since its going in the multisig and secondly and more important because you can both fund it back and forth with arbitrary small amounts so instead of the buyer sending the whole bitcoins in he could put in first wait for the seller to put in then put in another and so forth this is the beauty of bitin illegal dangerous transactions can now be done safely because you can prove that each party cant screw the other party over without hurting themselves worse talk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true i like the sound of this i think the fund first policy will change as reputations increase for e g a vendor with stellar rep and a brand new buyer one would expect the buyer to go first but there are some etc rich people that could try and sink new vendors competition with this strategy and i am sure there will be other issues to but still i like where this is going . i dont understand one bit of this but thankyou for sharing i hope its of great help to someone . quotetalk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true i like this concept simply for the fact it is true in terms of what is hard it may seem easy to me and you but to the average population even typing a command line can be quite a lot of work already not everyone is as technically apt as someone like you with cryptography experience in regards to ronins issue with signing are you sure you used the correct scriptpubkey hex and vout index cheers mdparity . that doesnt really solve the problem that i was looking to fix in order to assure that the redeemscript is authentic and hast been tempered each party must communicate in advance of the payment with a separate new signed message in fact it seems even less secure than tmps implementation because you ask the user to give up their private key during normal operations why would the end user have to provide their key when blackbank should be able to sign the transaction and present to the vendor or buyer in the case of a refund the partial signed transaction to complete i can tell you that buyers have key management issues very very often also if a malicious party ever gained control of the server theyd be able to to take every order as it was finalized i was hoping somebody with better skill at crypto than me would be able to figure out a way to present a proof that the key came from a set of keys the vendor produced without resorting to things such as storing signed hashes of keys or the like or doing something like releasing an extended public key that could be used to trace transactions thru the blockchain . damn this only confused me have to read some more about it . that doesnt really solve the problem that i was looking to fix in order to assure that the redeemscript is authentic and hast been tempered each party must communicate in advance of the payment with a separate new signed message in fact it seems even less secure than tmps implementation because you ask the user to give up their private key during normal operations why would the end user have to provide their key when blackbank should be able to sign the transaction and present to the vendor or buyer in the case of a refund the partial signed transaction to complete i can tell you that buyers have key management issues very very often also if a malicious party ever gained control of the server theyd be able to to take every order as it was finalized i was hoping somebody with better skill at crypto than me would be able to figure out a way to present a proof that the key came from a set of keys the vendor produced without resorting to things such as storing signed hashes of keys or the like or doing something like releasing an extended public key that could be used to trace transactions thru the blockchain . since you are one of the only others working on p sh there is an interesting problem ive been working on that i havent found a good solution for how can it be made easy to verify that the redeemscript that your p sh address is made of when doing this sort of automatic escrow system that a market would use doesnt have two public keys produced by the market for the puprose of taking your coins you could of course message your vendor every single time before making your payment i was given redeemscript blah is your public key in there i doubt vendors would be down with that solution you could also require vendors to provide a signed copy of each public key they use so you could verify that it was theirs i dont think a market wants to store all those signed keys nor does a vendor want to go thru the burden of creating them all the easiest solution for a vendor would be to have the vendor provide a public extended key from a big wallet the problem with this is of course it is now trivial to track payments to you on the blockchain because you just look for every redeemscript presented with one of your keys in it i will admit that im not too gamesome at ecc is there anyway to prove to a buyer that one of the addresses in the redeemscript is from the vendor without leaking any of the vendors info . this patch works with electrum im not sure till work for of . im not working on it its already implements of blackbank multi sig escrow buyer can always withdraw the funds at daytime if not in multi sig buyer can buy multiply items at a time without waiting for multiply confirmations vendor only needs to create a public private key when accepting a purchase the time funds are in blackbank minimized mitigating hacker le confiscation and scam risks funds can be finalized outside of blackbank using bitin it client with an easy to use code no more hackers le confiscation and scam risksin my implementation neither the buyer vendor need to use keys generated from their own wallet the redeemscript is created from private public keys that the vendor and buyer need to generate themselves i found that top uses brainwallet org to generate the keys so i adopted that portion of their system however i dont expect buyers vendors to create the script hashes themselves they simply provide the public keys and blackbank takes care of the address and scripts the redeemscript is kept in the database after generation the vendor does not have to generate multiply addresses because blackbank does not generate any mufti sig until the vendor accepts the purchase so the vendor only needs to create private public key pairs on a per purchase basis this saves them the time of generating multiply private public key pairs at a time during the time that a vendor has not accepted a purchase the buyer can always cancel the purchase as the funds are not in a multi sig address yet when a buyer releases the funds this is when the private key enters the blackbank market system and using the combination of blackbanks and the buyers keys creates a raw transaction from the redeemscript and provided information then releases the funds to a payment address from the vendor an signed transaction hex is also provided to the vendor and buyer after a multi sig escrow begins transaction the hex contains all the information they require to check verify the transaction as well as sign and send a transaction without the assistance of blackbank if say blackbank was unavoidable cheers mdparityps i will definitely be looking up the white papers for bip from a brief overlook deterministic wallets could definitely be useful i need to take a more in depth look on how its used and if it can be implements thanks for the info as its greatly appreciated . now that people are getting familiar with multisig addresses there is one last component needed in order for people to do off site trades with confidence mutually assured destruction in short its a economic method of it costs you more to screw me than to be honest and thats true for both partieslets imagine a buyer and a seller and they create a of multisig the buyer wants to buy bitin worth of product the buyer puts up bitcoin in the address and the seller puts in say bitcoin and then mails the product i have made the seller put up less because he must also lose the product before he is paid but in the end it doesnt matter they can put up the same amount as long as its more than the btc cost of the trade so the multisig address has bitcoins in it and the product is shipped because the product isnt shipped until all bitcoins form the buyer are in the address the seller knows it would cost the buyer more to screw him over than to play honest so by merely funding the address the buyer proves he doesnt intend to scam and additional because the buyer never need know who the seller is ill or what his address is the seller can also be confident of the legitimacy of the buyer assuming the seller has good anonymous shipping procedures once the buyer receives his product he has incentive to pay the seller because the same transaction that pays the seller also refunds him bitcoins back if he screws the seller over hes out his whole bitcoins instead of just the cost of the product so he creates a transaction to send himself and send the seller the sellers original two plus one more for the cost of the trade if the buyer doesnt create this exact transaction the seller wont sign it and the buyer cant get his bitcoins back the important thing here is that the amount each party deposits into the multisig is more than the cost of the trade but still a small enough amount that if there is a problem or one party is unfaithful that its small enough that youre willing to lose it in order to spite the other guy for scamming you so like if the seller sends bad product the buyer can simply choose to sacrifice his money in order to ensure the seller doesnt get paid doing business in this manner allows both parties to have confidence in the other because it is more costly to scam than to do honest business and at no point can one person screw the other without himself getting hurt the only place where there is imbalance is in the funding of the multisig at some point somebody has to send first however the risk associated with that is mitigate by two things first that the other party cant steal the funds since its going in the multisig and secondly and more important because you can both fund it back and forth with arbitrary small amounts so instead of the buyer sending the whole bitcoins in he could put in first wait for the seller to put in then put in another and so forth this is the beauty of bitin illegal dangerous transactions can now be done safely because you can prove that each party cant screw the other party over without hurting themselves worse talk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true . quotethe key is only provided at the time an order is finalized the public private key pairs should only be used once per transaction im sure if you look back up signing a transaction for every purchase would be incredibly difficult for a buyer vendor why would it be difficult what is inherent hard about signing a partial transaction once i hand over my private key i have no control over where the funds go a malicious party in control of the server would be able to do whatever they wanted with the escrow funds at that time that defeats the purpose of a of p sh escrow system the point of the system is that no matter how badly the market is compromise the funds are safe right now tops system is near perfect except for the fact that the user has to send a signed message to the vendor with the redeemscript used to create the p sh address the payment was sent to and if they dont communicate that information in advance of the payment the buyer could lose money on the purchase im looking for a way to solve this corner case without either a buyer being able to link payments together like if you were to get a extended public key from an big wallet or without having to resort having to take extra action on each key produced by the vendor to guarrentee authenticity quotehas anyone tried to sign a multi sir transaction with electrumman it was such a pain in the ass i gave up in the end after a lot of waster time got as far as putting in all the inputs it expects such as prevhash out etc and created the raw transaction but on signing the raw transaction hash it always fails even using all the required inputs as well as the transaction hex from following the python code i am beginning to think the servers i am connecting to dont like it and i dont have the resources to run my own electrum server has anyone tried and got this to work i am giving up and using the original bitcoind but wanted to write a plugin which would make it easy for a newbie to run it in electrumthats why i wrote a patch to electrum to fix it so that it works with the same information that bitcoind uses two months ago that patch is the basis of the tmp electrum plugin . quote from owockeznan on february pmthats why i wrote a patch to electrum to fix it so that it works with the same information that bitcoind uses two months ago that patch is the basis of the tmp electrum plugin would you mind helping me out which version of electrum does it work with can you send me a sample transaction one that is already spent and i will try following it through the code any idea why electrum use different inputs to bitcoind but fails to provide any ai forcing one to trawl through there source i am trying to create a of off market escrow plugin what i want to achieve isbuyer sends vendor new public key from his wallet vendor creates mufti sig address and sends buyer his own public key so buyer can verify buyer funds addressthey do business vendor signs a transaction to send funds to himself and sends transaction hex to buyerbuyer signs and broadcasts transactionand why on earth does electrum want more than the hex to sign it was bugging the hell out of me and i done think people will go for this if they have to use the original bitcoind on cud line as its less user friendly rascally i want to make it possible for people to use the plugin to do p p business easily cut out all middlemen . i dont understand one bit of this but thankyou for sharing i hope its of great help to someone . quote from of pwmolzg i on february pmnow that people are getting familiar with multisig addresses there is one last component needed in order for people to do off site trades with confidence mutually assured destruction in short its a economic method of it costs you more to screw me than to be honest and thats true for both partieslets imagine a buyer and a seller and they create a of multisig the buyer wants to buy bitin worth of product the buyer puts up bitcoin in the address and the seller puts in say bitcoin and then mails the product i have made the seller put up less because he must also lose the product before he is paid but in the end it doesnt matter they can put up the same amount as long as its more than the btc cost of the trade so the multisig address has bitcoins in it and the product is shipped because the product isnt shipped until all bitcoins form the buyer are in the address the seller knows it would cost the buyer more to screw him over than to play honest so by merely funding the address the buyer proves he doesnt intend to scam and additional because the buyer never need know who the seller is ill or what his address is the seller can also be confident of the legitimacy of the buyer assuming the seller has good anonymous shipping procedures once the buyer receives his product he has incentive to pay the seller because the same transaction that pays the seller also refunds him bitcoins back if he screws the seller over hes out his whole bitcoins instead of just the cost of the product so he creates a transaction to send himself and send the seller the sellers original two plus one more for the cost of the trade if the buyer doesnt create this exact transaction the seller wont sign it and the buyer cant get his bitcoins back the important thing here is that the amount each party deposits into the multisig is more than the cost of the trade but still a small enough amount that if there is a problem or one party is unfaithful that its small enough that youre willing to lose it in order to spite the other guy for scamming you so like if the seller sends bad product the buyer can simply choose to sacrifice his money in order to ensure the seller doesnt get paid doing business in this manner allows both parties to have confidence in the other because it is more costly to scam than to do honest business and at no point can one person screw the other without himself getting hurt the only place where there is imbalance is in the funding of the multisig at some point somebody has to send first however the risk associated with that is mitigate by two things first that the other party cant steal the funds since its going in the multisig and secondly and more important because you can both fund it back and forth with arbitrary small amounts so instead of the buyer sending the whole bitcoins in he could put in first wait for the seller to put in then put in another and so forth this is the beauty of bitin illegal dangerous transactions can now be done safely because you can prove that each party cant screw the other party over without hurting themselves worse talk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true i like the sound of this i think the fund first policy will change as reputations increase for e g a vendor with stellar rep and a brand new buyer one would expect the buyer to go first but there are some etc rich people that could try and sink new vendors competition with this strategy and i am sure there will be other issues to but still i like where this is going . quote from owockeznan on february pmthats why i wrote a patch to electrum to fix it so that it works with the same information that bitcoind uses two months ago that patch is the basis of the tmp electrum plugin would you mind helping me out which version of electrum does it work with can you send me a sample transaction one that is already spent and i will try following it through the code any idea why electrum use different inputs to bitcoind but fails to provide any ai forcing one to trawl through there source i am trying to create a of off market escrow plugin what i want to achieve isbuyer sends vendor new public key from his wallet vendor creates mufti sig address and sends buyer his own public key so buyer can verify buyer funds addressthey do business vendor signs a transaction to send funds to himself and sends transaction hex to buyerbuyer signs and broadcasts transactionand why on earth does electrum want more than the hex to sign it was bugging the hell out of me and i done think people will go for this if they have to use the original bitcoind on cud line as its less user friendly rascally i want to make it possible for people to use the plugin to do p p business easily cut out all middlemen . this patch works with electrum im not sure till work for of . has anyone tried to sign a multi sir transaction with electrumman it was such a pain in the ass i gave up in the end after a lot of waster time got as far as putting in all the inputs it expects such as prevhash out etc and created the raw transaction but on signing the raw transaction hash it always fails even using all the required inputs as well as the transaction hex from following the python code i am beginning to think the servers i am connecting to dont like it and i dont have the resources to run my own electrum server has anyone tried and got this to work i am giving up and using the original bitcoind but wanted to write a plugin which would make it easy for a newbie to run it in electrum . quotetalk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true i like this concept simply for the fact it is true in terms of what is hard it may seem easy to me and you but to the average population even typing a command line can be quite a lot of work already not everyone is as technically apt as someone like you with cryptography experience in regards to ronins issue with signing are you sure you used the correct scriptpubkey hex and vout index cheers mdparity . has anyone tried to sign a multi sir transaction with electrumman it was such a pain in the ass i gave up in the end after a lot of waster time got as far as putting in all the inputs it expects such as prevhash out etc and created the raw transaction but on signing the raw transaction hash it always fails even using all the required inputs as well as the transaction hex from following the python code i am beginning to think the servers i am connecting to dont like it and i dont have the resources to run my own electrum server has anyone tried and got this to work i am giving up and using the original bitcoind but wanted to write a plugin which would make it easy for a newbie to run it in electrum . quote from of pwmolzg i on february pmnow that people are getting familiar with multisig addresses there is one last component needed in order for people to do off site trades with confidence mutually assured destruction in short its a economic method of it costs you more to screw me than to be honest and thats true for both partieslets imagine a buyer and a seller and they create a of multisig the buyer wants to buy bitin worth of product the buyer puts up bitcoin in the address and the seller puts in say bitcoin and then mails the product i have made the seller put up less because he must also lose the product before he is paid but in the end it doesnt matter they can put up the same amount as long as its more than the btc cost of the trade so the multisig address has bitcoins in it and the product is shipped because the product isnt shipped until all bitcoins form the buyer are in the address the seller knows it would cost the buyer more to screw him over than to play honest so by merely funding the address the buyer proves he doesnt intend to scam and additional because the buyer never need know who the seller is ill or what his address is the seller can also be confident of the legitimacy of the buyer assuming the seller has good anonymous shipping procedures once the buyer receives his product he has incentive to pay the seller because the same transaction that pays the seller also refunds him bitcoins back if he screws the seller over hes out his whole bitcoins instead of just the cost of the product so he creates a transaction to send himself and send the seller the sellers original two plus one more for the cost of the trade if the buyer doesnt create this exact transaction the seller wont sign it and the buyer cant get his bitcoins back the important thing here is that the amount each party deposits into the multisig is more than the cost of the trade but still a small enough amount that if there is a problem or one party is unfaithful that its small enough that youre willing to lose it in order to spite the other guy for scamming you so like if the seller sends bad product the buyer can simply choose to sacrifice his money in order to ensure the seller doesnt get paid doing business in this manner allows both parties to have confidence in the other because it is more costly to scam than to do honest business and at no point can one person screw the other without himself getting hurt the only place where there is imbalance is in the funding of the multisig at some point somebody has to send first however the risk associated with that is mitigate by two things first that the other party cant steal the funds since its going in the multisig and secondly and more important because you can both fund it back and forth with arbitrary small amounts so instead of the buyer sending the whole bitcoins in he could put in first wait for the seller to put in then put in another and so forth this is the beauty of bitin illegal dangerous transactions can now be done safely because you can prove that each party cant screw the other party over without hurting themselves worse talk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true i like the sound of this i think the fund first policy will change as reputations increase for e g a vendor with stellar rep and a brand new buyer one would expect the buyer to go first but there are some etc rich people that could try and sink new vendors competition with this strategy and i am sure there will be other issues to but still i like where this is going . since you are one of the only others working on p sh there is an interesting problem ive been working on that i havent found a good solution for how can it be made easy to verify that the redeemscript that your p sh address is made of when doing this sort of automatic escrow system that a market would use doesnt have two public keys produced by the market for the puprose of taking your coins you could of course message your vendor every single time before making your payment i was given redeemscript blah is your public key in there i doubt vendors would be down with that solution you could also require vendors to provide a signed copy of each public key they use so you could verify that it was theirs i dont think a market wants to store all those signed keys nor does a vendor want to go thru the burden of creating them all the easiest solution for a vendor would be to have the vendor provide a public extended key from a big wallet the problem with this is of course it is now trivial to track payments to you on the blockchain because you just look for every redeemscript presented with one of your keys in it i will admit that im not too gamesome at ecc is there anyway to prove to a buyer that one of the addresses in the redeemscript is from the vendor without leaking any of the vendors info . quotethe key is only provided at the time an order is finalized the public private key pairs should only be used once per transaction im sure if you look back up signing a transaction for every purchase would be incredibly difficult for a buyer vendor why would it be difficult what is inherent hard about signing a partial transaction once i hand over my private key i have no control over where the funds go a malicious party in control of the server would be able to do whatever they wanted with the escrow funds at that time that defeats the purpose of a of p sh escrow system the point of the system is that no matter how badly the market is compromise the funds are safe right now tops system is near perfect except for the fact that the user has to send a signed message to the vendor with the redeemscript used to create the p sh address the payment was sent to and if they dont communicate that information in advance of the payment the buyer could lose money on the purchase im looking for a way to solve this corner case without either a buyer being able to link payments together like if you were to get a extended public key from an big wallet or without having to resort having to take extra action on each key produced by the vendor to guarrentee authenticity quotehas anyone tried to sign a multi sir transaction with electrumman it was such a pain in the ass i gave up in the end after a lot of waster time got as far as putting in all the inputs it expects such as prevhash out etc and created the raw transaction but on signing the raw transaction hash it always fails even using all the required inputs as well as the transaction hex from following the python code i am beginning to think the servers i am connecting to dont like it and i dont have the resources to run my own electrum server has anyone tried and got this to work i am giving up and using the original bitcoind but wanted to write a plugin which would make it easy for a newbie to run it in electrumthats why i wrote a patch to electrum to fix it so that it works with the same information that bitcoind uses two months ago that patch is the basis of the tmp electrum plugin . howdy read the wiki i provided the key is only provided at the time an order is finalized the public private key pairs should only be used once per transaction im sure if you look back up signing a transaction for every purchase would be incredibly difficult for a buyer vendor blackbank could provide a partially signed transaction but then the user would need to complete the sign then send the raw transaction for every single purchase if a buyer really doesn want to provide a private key at the time of payment a manual fe code is provided if they dont want to submit their private key which doesnt make sense since its a disposal one time use key the private public key pairs discloses nothing about the vendor or buyer as per my suggestion is to use brainwallet org to generate a random public private key pair you cant trace the public key through the blockchain the private public address generated are not used for actual transactions is is used only for signing regardless once the payment is made the transaction still pays directly to the vendors wallet which is traceable through the blockchain at the end of the day the bitcoin still has to reach the vendors address however as stated the public private key pair has nothing to do with the payment withdrawal addresses how can a random generated public private key from brainwallet org be able to link to a vendor buyer cheers mdparity . now that people are getting familiar with multisig addresses there is one last component needed in order for people to do off site trades with confidence mutually assured destruction in short its a economic method of it costs you more to screw me than to be honest and thats true for both partieslets imagine a buyer and a seller and they create a of multisig the buyer wants to buy bitin worth of product the buyer puts up bitcoin in the address and the seller puts in say bitcoin and then mails the product i have made the seller put up less because he must also lose the product before he is paid but in the end it doesnt matter they can put up the same amount as long as its more than the btc cost of the trade so the multisig address has bitcoins in it and the product is shipped because the product isnt shipped until all bitcoins form the buyer are in the address the seller knows it would cost the buyer more to screw him over than to play honest so by merely funding the address the buyer proves he doesnt intend to scam and additional because the buyer never need know who the seller is ill or what his address is the seller can also be confident of the legitimacy of the buyer assuming the seller has good anonymous shipping procedures once the buyer receives his product he has incentive to pay the seller because the same transaction that pays the seller also refunds him bitcoins back if he screws the seller over hes out his whole bitcoins instead of just the cost of the product so he creates a transaction to send himself and send the seller the sellers original two plus one more for the cost of the trade if the buyer doesnt create this exact transaction the seller wont sign it and the buyer cant get his bitcoins back the important thing here is that the amount each party deposits into the multisig is more than the cost of the trade but still a small enough amount that if there is a problem or one party is unfaithful that its small enough that youre willing to lose it in order to spite the other guy for scamming you so like if the seller sends bad product the buyer can simply choose to sacrifice his money in order to ensure the seller doesnt get paid doing business in this manner allows both parties to have confidence in the other because it is more costly to scam than to do honest business and at no point can one person screw the other without himself getting hurt the only place where there is imbalance is in the funding of the multisig at some point somebody has to send first however the risk associated with that is mitigate by two things first that the other party cant steal the funds since its going in the multisig and secondly and more important because you can both fund it back and forth with arbitrary small amounts so instead of the buyer sending the whole bitcoins in he could put in first wait for the seller to put in then put in another and so forth this is the beauty of bitin illegal dangerous transactions can now be done safely because you can prove that each party cant screw the other party over without hurting themselves worse talk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true . this patch works with electrum im not sure till work for of . i dont understand one bit of this but thankyou for sharing i hope its of great help to someone . howdy the below is everything needed to create a mufti sig address send btc to the address then spend btc back to an address through a script hash i am sharing this as any markets can use this information to implement a multi sir transaction in addition this information can be used by individuals to create a mufti sig address with who ever they are conducting business with and a third party individual cheers mdparity courtesy of gain andersen pay script hath raw transaction ai example work through send coins to a of multisig then spend them for this example im using these three keypairs public private bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f jatxbaumfpyzfrwryaalk fn sfjp rhqq qsxs cape yqu c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec jb fceh wtm ybbg q xbt b i kvhy vmc aqfr fh qgk d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d jfjmgo fww p gvx qbydjnazr pmh s axmtdypt ddqmw first combine the three keys into a multisig address bitcoind createmultisig bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d address qjmv qfvl suyo yihaf srcw qsinyc redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae next create a transaction to send funds into that multisig transaction d f is an unspent transaction in my wallet which i got from the listunspent rpc call bitcoind createrawtransaction txid d f aab ff ff a bf ddba dc c f vout jav qfvl suyo yihaf srcw qsinyc f c c da db dbf a f ff fab af d ffffffff f a f b d bbbce e f a and bf dc e and sign it bitcoind signrawtransaction f c c da db dbf a f ff fab af d ffffffff f a f b d bbbce e f a and bf dc e hex f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e complete true now create a transaction that will spend that multisig transaction first i need the txid of the transaction i just created so bitcoind decoderawtransaction f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e txid c e d c d f f eef c fb a e c b f a ac etc rest omitted to make this shorter create the spend from multisig transaction since the fund the multisig transaction hasnt been sent yet i need to give txid scriptpubkey and redeemscript bitcoind createrawtransaction txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae gtpsrghrgy kkrnz rykoqrqojug l ds aca f b c e a b c ef e f f d c d e c ffffffff f a ae b db d c db aed bbed b ac now i can partially sign it using one private key bitcoind signrawtransaction aca f b c e a b c ef e f f d c d e c ffffffff f a ae b db d c db aed bbed b ac txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae jatxbaumfpyzfrwryaalk fn sfjp rhqq qsxs cape yqu hex aca f b c e a b c ef e f f d c d e c d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac complete false and then take the hex from that and complete the of signatures using one of the other public keys note the hex result getting longer bitcoind signrawtransaction aca f b c e a b c ef e f f d c d e c d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae jfjmgo fww p gvx qbydjnazr pmh s axmtdypt ddqmw hex aca f b c e a b c ef e f f d c d e c d d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d f f f a a ecb e d eb cb c d d b a d bfed e f ad d ae e e bc db c a a f ed fb da a cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b a complete true and i can send the funding and spending transactions bitcoind sendrawtransaction f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e c e d c d f f eef c fb a e c b f a ac bitcoind sendrawtransaction aca f b c e a b c ef e f f d c d e c d d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d f f f a a ecb e d eb cb c d d b a d bfed e f ad d ae e e bc db c a a f ed fb da a cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac dea ddc b e ce f a e bbd cc f ac a d ebe a ba you can see these transactions at . damn this only confused me have to read some more about it . im not working on it its already implements of blackbank multi sig escrow buyer can always withdraw the funds at daytime if not in multi sig buyer can buy multiply items at a time without waiting for multiply confirmations vendor only needs to create a public private key when accepting a purchase the time funds are in blackbank minimized mitigating hacker le confiscation and scam risks funds can be finalized outside of blackbank using bitin it client with an easy to use code no more hackers le confiscation and scam risksin my implementation neither the buyer vendor need to use keys generated from their own wallet the redeemscript is created from private public keys that the vendor and buyer need to generate themselves i found that top uses brainwallet org to generate the keys so i adopted that portion of their system however i dont expect buyers vendors to create the script hashes themselves they simply provide the public keys and blackbank takes care of the address and scripts the redeemscript is kept in the database after generation the vendor does not have to generate multiply addresses because blackbank does not generate any mufti sig until the vendor accepts the purchase so the vendor only needs to create private public key pairs on a per purchase basis this saves them the time of generating multiply private public key pairs at a time during the time that a vendor has not accepted a purchase the buyer can always cancel the purchase as the funds are not in a multi sig address yet when a buyer releases the funds this is when the private key enters the blackbank market system and using the combination of blackbanks and the buyers keys creates a raw transaction from the redeemscript and provided information then releases the funds to a payment address from the vendor an signed transaction hex is also provided to the vendor and buyer after a multi sig escrow begins transaction the hex contains all the information they require to check verify the transaction as well as sign and send a transaction without the assistance of blackbank if say blackbank was unavoidable cheers mdparityps i will definitely be looking up the white papers for bip from a brief overlook deterministic wallets could definitely be useful i need to take a more in depth look on how its used and if it can be implements thanks for the info as its greatly appreciated . howdy read the wiki i provided the key is only provided at the time an order is finalized the public private key pairs should only be used once per transaction im sure if you look back up signing a transaction for every purchase would be incredibly difficult for a buyer vendor blackbank could provide a partially signed transaction but then the user would need to complete the sign then send the raw transaction for every single purchase if a buyer really doesn want to provide a private key at the time of payment a manual fe code is provided if they dont want to submit their private key which doesnt make sense since its a disposal one time use key the private public key pairs discloses nothing about the vendor or buyer as per my suggestion is to use brainwallet org to generate a random public private key pair you cant trace the public key through the blockchain the private public address generated are not used for actual transactions is is used only for signing regardless once the payment is made the transaction still pays directly to the vendors wallet which is traceable through the blockchain at the end of the day the bitcoin still has to reach the vendors address however as stated the public private key pair has nothing to do with the payment withdrawal addresses how can a random generated public private key from brainwallet org be able to link to a vendor buyer cheers mdparity . quote from of pwmolzg i on february pmnow that people are getting familiar with multisig addresses there is one last component needed in order for people to do off site trades with confidence mutually assured destruction in short its a economic method of it costs you more to screw me than to be honest and thats true for both partieslets imagine a buyer and a seller and they create a of multisig the buyer wants to buy bitin worth of product the buyer puts up bitcoin in the address and the seller puts in say bitcoin and then mails the product i have made the seller put up less because he must also lose the product before he is paid but in the end it doesnt matter they can put up the same amount as long as its more than the btc cost of the trade so the multisig address has bitcoins in it and the product is shipped because the product isnt shipped until all bitcoins form the buyer are in the address the seller knows it would cost the buyer more to screw him over than to play honest so by merely funding the address the buyer proves he doesnt intend to scam and additional because the buyer never need know who the seller is ill or what his address is the seller can also be confident of the legitimacy of the buyer assuming the seller has good anonymous shipping procedures once the buyer receives his product he has incentive to pay the seller because the same transaction that pays the seller also refunds him bitcoins back if he screws the seller over hes out his whole bitcoins instead of just the cost of the product so he creates a transaction to send himself and send the seller the sellers original two plus one more for the cost of the trade if the buyer doesnt create this exact transaction the seller wont sign it and the buyer cant get his bitcoins back the important thing here is that the amount each party deposits into the multisig is more than the cost of the trade but still a small enough amount that if there is a problem or one party is unfaithful that its small enough that youre willing to lose it in order to spite the other guy for scamming you so like if the seller sends bad product the buyer can simply choose to sacrifice his money in order to ensure the seller doesnt get paid doing business in this manner allows both parties to have confidence in the other because it is more costly to scam than to do honest business and at no point can one person screw the other without himself getting hurt the only place where there is imbalance is in the funding of the multisig at some point somebody has to send first however the risk associated with that is mitigate by two things first that the other party cant steal the funds since its going in the multisig and secondly and more important because you can both fund it back and forth with arbitrary small amounts so instead of the buyer sending the whole bitcoins in he could put in first wait for the seller to put in then put in another and so forth this is the beauty of bitin illegal dangerous transactions can now be done safely because you can prove that each party cant screw the other party over without hurting themselves worse talk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true i like the sound of this i think the fund first policy will change as reputations increase for e g a vendor with stellar rep and a brand new buyer one would expect the buyer to go first but there are some etc rich people that could try and sink new vendors competition with this strategy and i am sure there will be other issues to but still i like where this is going . now that people are getting familiar with multisig addresses there is one last component needed in order for people to do off site trades with confidence mutually assured destruction in short its a economic method of it costs you more to screw me than to be honest and thats true for both partieslets imagine a buyer and a seller and they create a of multisig the buyer wants to buy bitin worth of product the buyer puts up bitcoin in the address and the seller puts in say bitcoin and then mails the product i have made the seller put up less because he must also lose the product before he is paid but in the end it doesnt matter they can put up the same amount as long as its more than the btc cost of the trade so the multisig address has bitcoins in it and the product is shipped because the product isnt shipped until all bitcoins form the buyer are in the address the seller knows it would cost the buyer more to screw him over than to play honest so by merely funding the address the buyer proves he doesnt intend to scam and additional because the buyer never need know who the seller is ill or what his address is the seller can also be confident of the legitimacy of the buyer assuming the seller has good anonymous shipping procedures once the buyer receives his product he has incentive to pay the seller because the same transaction that pays the seller also refunds him bitcoins back if he screws the seller over hes out his whole bitcoins instead of just the cost of the product so he creates a transaction to send himself and send the seller the sellers original two plus one more for the cost of the trade if the buyer doesnt create this exact transaction the seller wont sign it and the buyer cant get his bitcoins back the important thing here is that the amount each party deposits into the multisig is more than the cost of the trade but still a small enough amount that if there is a problem or one party is unfaithful that its small enough that youre willing to lose it in order to spite the other guy for scamming you so like if the seller sends bad product the buyer can simply choose to sacrifice his money in order to ensure the seller doesnt get paid doing business in this manner allows both parties to have confidence in the other because it is more costly to scam than to do honest business and at no point can one person screw the other without himself getting hurt the only place where there is imbalance is in the funding of the multisig at some point somebody has to send first however the risk associated with that is mitigate by two things first that the other party cant steal the funds since its going in the multisig and secondly and more important because you can both fund it back and forth with arbitrary small amounts so instead of the buyer sending the whole bitcoins in he could put in first wait for the seller to put in then put in another and so forth this is the beauty of bitin illegal dangerous transactions can now be done safely because you can prove that each party cant screw the other party over without hurting themselves worse talk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true . i dont understand one bit of this but thankyou for sharing i hope its of great help to someone . this patch works with electrum im not sure till work for of . now that people are getting familiar with multisig addresses there is one last component needed in order for people to do off site trades with confidence mutually assured destruction in short its a economic method of it costs you more to screw me than to be honest and thats true for both partieslets imagine a buyer and a seller and they create a of multisig the buyer wants to buy bitin worth of product the buyer puts up bitcoin in the address and the seller puts in say bitcoin and then mails the product i have made the seller put up less because he must also lose the product before he is paid but in the end it doesnt matter they can put up the same amount as long as its more than the btc cost of the trade so the multisig address has bitcoins in it and the product is shipped because the product isnt shipped until all bitcoins form the buyer are in the address the seller knows it would cost the buyer more to screw him over than to play honest so by merely funding the address the buyer proves he doesnt intend to scam and additional because the buyer never need know who the seller is ill or what his address is the seller can also be confident of the legitimacy of the buyer assuming the seller has good anonymous shipping procedures once the buyer receives his product he has incentive to pay the seller because the same transaction that pays the seller also refunds him bitcoins back if he screws the seller over hes out his whole bitcoins instead of just the cost of the product so he creates a transaction to send himself and send the seller the sellers original two plus one more for the cost of the trade if the buyer doesnt create this exact transaction the seller wont sign it and the buyer cant get his bitcoins back the important thing here is that the amount each party deposits into the multisig is more than the cost of the trade but still a small enough amount that if there is a problem or one party is unfaithful that its small enough that youre willing to lose it in order to spite the other guy for scamming you so like if the seller sends bad product the buyer can simply choose to sacrifice his money in order to ensure the seller doesnt get paid doing business in this manner allows both parties to have confidence in the other because it is more costly to scam than to do honest business and at no point can one person screw the other without himself getting hurt the only place where there is imbalance is in the funding of the multisig at some point somebody has to send first however the risk associated with that is mitigate by two things first that the other party cant steal the funds since its going in the multisig and secondly and more important because you can both fund it back and forth with arbitrary small amounts so instead of the buyer sending the whole bitcoins in he could put in first wait for the seller to put in then put in another and so forth this is the beauty of bitin illegal dangerous transactions can now be done safely because you can prove that each party cant screw the other party over without hurting themselves worse talk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true . howdy read the wiki i provided the key is only provided at the time an order is finalized the public private key pairs should only be used once per transaction im sure if you look back up signing a transaction for every purchase would be incredibly difficult for a buyer vendor blackbank could provide a partially signed transaction but then the user would need to complete the sign then send the raw transaction for every single purchase if a buyer really doesn want to provide a private key at the time of payment a manual fe code is provided if they dont want to submit their private key which doesnt make sense since its a disposal one time use key the private public key pairs discloses nothing about the vendor or buyer as per my suggestion is to use brainwallet org to generate a random public private key pair you cant trace the public key through the blockchain the private public address generated are not used for actual transactions is is used only for signing regardless once the payment is made the transaction still pays directly to the vendors wallet which is traceable through the blockchain at the end of the day the bitcoin still has to reach the vendors address however as stated the public private key pair has nothing to do with the payment withdrawal addresses how can a random generated public private key from brainwallet org be able to link to a vendor buyer cheers mdparity . im not working on it its already implements of blackbank multi sig escrow buyer can always withdraw the funds at daytime if not in multi sig buyer can buy multiply items at a time without waiting for multiply confirmations vendor only needs to create a public private key when accepting a purchase the time funds are in blackbank minimized mitigating hacker le confiscation and scam risks funds can be finalized outside of blackbank using bitin it client with an easy to use code no more hackers le confiscation and scam risksin my implementation neither the buyer vendor need to use keys generated from their own wallet the redeemscript is created from private public keys that the vendor and buyer need to generate themselves i found that top uses brainwallet org to generate the keys so i adopted that portion of their system however i dont expect buyers vendors to create the script hashes themselves they simply provide the public keys and blackbank takes care of the address and scripts the redeemscript is kept in the database after generation the vendor does not have to generate multiply addresses because blackbank does not generate any mufti sig until the vendor accepts the purchase so the vendor only needs to create private public key pairs on a per purchase basis this saves them the time of generating multiply private public key pairs at a time during the time that a vendor has not accepted a purchase the buyer can always cancel the purchase as the funds are not in a multi sig address yet when a buyer releases the funds this is when the private key enters the blackbank market system and using the combination of blackbanks and the buyers keys creates a raw transaction from the redeemscript and provided information then releases the funds to a payment address from the vendor an signed transaction hex is also provided to the vendor and buyer after a multi sig escrow begins transaction the hex contains all the information they require to check verify the transaction as well as sign and send a transaction without the assistance of blackbank if say blackbank was unavoidable cheers mdparityps i will definitely be looking up the white papers for bip from a brief overlook deterministic wallets could definitely be useful i need to take a more in depth look on how its used and if it can be implements thanks for the info as its greatly appreciated . howdy the below is everything needed to create a mufti sig address send btc to the address then spend btc back to an address through a script hash i am sharing this as any markets can use this information to implement a multi sir transaction in addition this information can be used by individuals to create a mufti sig address with who ever they are conducting business with and a third party individual cheers mdparity courtesy of gain andersen pay script hath raw transaction ai example work through send coins to a of multisig then spend them for this example im using these three keypairs public private bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f jatxbaumfpyzfrwryaalk fn sfjp rhqq qsxs cape yqu c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec jb fceh wtm ybbg q xbt b i kvhy vmc aqfr fh qgk d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d jfjmgo fww p gvx qbydjnazr pmh s axmtdypt ddqmw first combine the three keys into a multisig address bitcoind createmultisig bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d address qjmv qfvl suyo yihaf srcw qsinyc redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae next create a transaction to send funds into that multisig transaction d f is an unspent transaction in my wallet which i got from the listunspent rpc call bitcoind createrawtransaction txid d f aab ff ff a bf ddba dc c f vout jav qfvl suyo yihaf srcw qsinyc f c c da db dbf a f ff fab af d ffffffff f a f b d bbbce e f a and bf dc e and sign it bitcoind signrawtransaction f c c da db dbf a f ff fab af d ffffffff f a f b d bbbce e f a and bf dc e hex f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e complete true now create a transaction that will spend that multisig transaction first i need the txid of the transaction i just created so bitcoind decoderawtransaction f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e txid c e d c d f f eef c fb a e c b f a ac etc rest omitted to make this shorter create the spend from multisig transaction since the fund the multisig transaction hasnt been sent yet i need to give txid scriptpubkey and redeemscript bitcoind createrawtransaction txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae gtpsrghrgy kkrnz rykoqrqojug l ds aca f b c e a b c ef e f f d c d e c ffffffff f a ae b db d c db aed bbed b ac now i can partially sign it using one private key bitcoind signrawtransaction aca f b c e a b c ef e f f d c d e c ffffffff f a ae b db d c db aed bbed b ac txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae jatxbaumfpyzfrwryaalk fn sfjp rhqq qsxs cape yqu hex aca f b c e a b c ef e f f d c d e c d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac complete false and then take the hex from that and complete the of signatures using one of the other public keys note the hex result getting longer bitcoind signrawtransaction aca f b c e a b c ef e f f d c d e c d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae jfjmgo fww p gvx qbydjnazr pmh s axmtdypt ddqmw hex aca f b c e a b c ef e f f d c d e c d d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d f f f a a ecb e d eb cb c d d b a d bfed e f ad d ae e e bc db c a a f ed fb da a cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b a complete true and i can send the funding and spending transactions bitcoind sendrawtransaction f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e c e d c d f f eef c fb a e c b f a ac bitcoind sendrawtransaction aca f b c e a b c ef e f f d c d e c d d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d f f f a a ecb e d eb cb c d d b a d bfed e f ad d ae e e bc db c a a f ed fb da a cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac dea ddc b e ce f a e bbd cc f ac a d ebe a ba you can see these transactions at . since you are one of the only others working on p sh there is an interesting problem ive been working on that i havent found a good solution for how can it be made easy to verify that the redeemscript that your p sh address is made of when doing this sort of automatic escrow system that a market would use doesnt have two public keys produced by the market for the puprose of taking your coins you could of course message your vendor every single time before making your payment i was given redeemscript blah is your public key in there i doubt vendors would be down with that solution you could also require vendors to provide a signed copy of each public key they use so you could verify that it was theirs i dont think a market wants to store all those signed keys nor does a vendor want to go thru the burden of creating them all the easiest solution for a vendor would be to have the vendor provide a public extended key from a big wallet the problem with this is of course it is now trivial to track payments to you on the blockchain because you just look for every redeemscript presented with one of your keys in it i will admit that im not too gamesome at ecc is there anyway to prove to a buyer that one of the addresses in the redeemscript is from the vendor without leaking any of the vendors info . that doesnt really solve the problem that i was looking to fix in order to assure that the redeemscript is authentic and hast been tempered each party must communicate in advance of the payment with a separate new signed message in fact it seems even less secure than tmps implementation because you ask the user to give up their private key during normal operations why would the end user have to provide their key when blackbank should be able to sign the transaction and present to the vendor or buyer in the case of a refund the partial signed transaction to complete i can tell you that buyers have key management issues very very often also if a malicious party ever gained control of the server theyd be able to to take every order as it was finalized i was hoping somebody with better skill at crypto than me would be able to figure out a way to present a proof that the key came from a set of keys the vendor produced without resorting to things such as storing signed hashes of keys or the like or doing something like releasing an extended public key that could be used to trace transactions thru the blockchain . quotethe key is only provided at the time an order is finalized the public private key pairs should only be used once per transaction im sure if you look back up signing a transaction for every purchase would be incredibly difficult for a buyer vendor why would it be difficult what is inherent hard about signing a partial transaction once i hand over my private key i have no control over where the funds go a malicious party in control of the server would be able to do whatever they wanted with the escrow funds at that time that defeats the purpose of a of p sh escrow system the point of the system is that no matter how badly the market is compromise the funds are safe right now tops system is near perfect except for the fact that the user has to send a signed message to the vendor with the redeemscript used to create the p sh address the payment was sent to and if they dont communicate that information in advance of the payment the buyer could lose money on the purchase im looking for a way to solve this corner case without either a buyer being able to link payments together like if you were to get a extended public key from an big wallet or without having to resort having to take extra action on each key produced by the vendor to guarrentee authenticity quotehas anyone tried to sign a multi sir transaction with electrumman it was such a pain in the ass i gave up in the end after a lot of waster time got as far as putting in all the inputs it expects such as prevhash out etc and created the raw transaction but on signing the raw transaction hash it always fails even using all the required inputs as well as the transaction hex from following the python code i am beginning to think the servers i am connecting to dont like it and i dont have the resources to run my own electrum server has anyone tried and got this to work i am giving up and using the original bitcoind but wanted to write a plugin which would make it easy for a newbie to run it in electrumthats why i wrote a patch to electrum to fix it so that it works with the same information that bitcoind uses two months ago that patch is the basis of the tmp electrum plugin . howdy the below is everything needed to create a mufti sig address send btc to the address then spend btc back to an address through a script hash i am sharing this as any markets can use this information to implement a multi sir transaction in addition this information can be used by individuals to create a mufti sig address with who ever they are conducting business with and a third party individual cheers mdparity courtesy of gain andersen pay script hath raw transaction ai example work through send coins to a of multisig then spend them for this example im using these three keypairs public private bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f jatxbaumfpyzfrwryaalk fn sfjp rhqq qsxs cape yqu c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec jb fceh wtm ybbg q xbt b i kvhy vmc aqfr fh qgk d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d jfjmgo fww p gvx qbydjnazr pmh s axmtdypt ddqmw first combine the three keys into a multisig address bitcoind createmultisig bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d address qjmv qfvl suyo yihaf srcw qsinyc redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae next create a transaction to send funds into that multisig transaction d f is an unspent transaction in my wallet which i got from the listunspent rpc call bitcoind createrawtransaction txid d f aab ff ff a bf ddba dc c f vout jav qfvl suyo yihaf srcw qsinyc f c c da db dbf a f ff fab af d ffffffff f a f b d bbbce e f a and bf dc e and sign it bitcoind signrawtransaction f c c da db dbf a f ff fab af d ffffffff f a f b d bbbce e f a and bf dc e hex f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e complete true now create a transaction that will spend that multisig transaction first i need the txid of the transaction i just created so bitcoind decoderawtransaction f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e txid c e d c d f f eef c fb a e c b f a ac etc rest omitted to make this shorter create the spend from multisig transaction since the fund the multisig transaction hasnt been sent yet i need to give txid scriptpubkey and redeemscript bitcoind createrawtransaction txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae gtpsrghrgy kkrnz rykoqrqojug l ds aca f b c e a b c ef e f f d c d e c ffffffff f a ae b db d c db aed bbed b ac now i can partially sign it using one private key bitcoind signrawtransaction aca f b c e a b c ef e f f d c d e c ffffffff f a ae b db d c db aed bbed b ac txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae jatxbaumfpyzfrwryaalk fn sfjp rhqq qsxs cape yqu hex aca f b c e a b c ef e f f d c d e c d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac complete false and then take the hex from that and complete the of signatures using one of the other public keys note the hex result getting longer bitcoind signrawtransaction aca f b c e a b c ef e f f d c d e c d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae jfjmgo fww p gvx qbydjnazr pmh s axmtdypt ddqmw hex aca f b c e a b c ef e f f d c d e c d d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d f f f a a ecb e d eb cb c d d b a d bfed e f ad d ae e e bc db c a a f ed fb da a cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b a complete true and i can send the funding and spending transactions bitcoind sendrawtransaction f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e c e d c d f f eef c fb a e c b f a ac bitcoind sendrawtransaction aca f b c e a b c ef e f f d c d e c d d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d f f f a a ecb e d eb cb c d d b a d bfed e f ad d ae e e bc db c a a f ed fb da a cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac dea ddc b e ce f a e bbd cc f ac a d ebe a ba you can see these transactions at . quotetalk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true i like this concept simply for the fact it is true in terms of what is hard it may seem easy to me and you but to the average population even typing a command line can be quite a lot of work already not everyone is as technically apt as someone like you with cryptography experience in regards to ronins issue with signing are you sure you used the correct scriptpubkey hex and vout index cheers mdparity . quote from owockeznan on february pmthats why i wrote a patch to electrum to fix it so that it works with the same information that bitcoind uses two months ago that patch is the basis of the tmp electrum plugin would you mind helping me out which version of electrum does it work with can you send me a sample transaction one that is already spent and i will try following it through the code any idea why electrum use different inputs to bitcoind but fails to provide any ai forcing one to trawl through there source i am trying to create a of off market escrow plugin what i want to achieve isbuyer sends vendor new public key from his wallet vendor creates mufti sig address and sends buyer his own public key so buyer can verify buyer funds addressthey do business vendor signs a transaction to send funds to himself and sends transaction hex to buyerbuyer signs and broadcasts transactionand why on earth does electrum want more than the hex to sign it was bugging the hell out of me and i done think people will go for this if they have to use the original bitcoind on cud line as its less user friendly rascally i want to make it possible for people to use the plugin to do p p business easily cut out all middlemen . has anyone tried to sign a multi sir transaction with electrumman it was such a pain in the ass i gave up in the end after a lot of waster time got as far as putting in all the inputs it expects such as prevhash out etc and created the raw transaction but on signing the raw transaction hash it always fails even using all the required inputs as well as the transaction hex from following the python code i am beginning to think the servers i am connecting to dont like it and i dont have the resources to run my own electrum server has anyone tried and got this to work i am giving up and using the original bitcoind but wanted to write a plugin which would make it easy for a newbie to run it in electrum . damn this only confused me have to read some more about it . damn this only confused me have to read some more about it . howdy the below is everything needed to create a mufti sig address send btc to the address then spend btc back to an address through a script hash i am sharing this as any markets can use this information to implement a multi sir transaction in addition this information can be used by individuals to create a mufti sig address with who ever they are conducting business with and a third party individual cheers mdparity courtesy of gain andersen pay script hath raw transaction ai example work through send coins to a of multisig then spend them for this example im using these three keypairs public private bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f jatxbaumfpyzfrwryaalk fn sfjp rhqq qsxs cape yqu c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec jb fceh wtm ybbg q xbt b i kvhy vmc aqfr fh qgk d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d jfjmgo fww p gvx qbydjnazr pmh s axmtdypt ddqmw first combine the three keys into a multisig address bitcoind createmultisig bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d address qjmv qfvl suyo yihaf srcw qsinyc redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae next create a transaction to send funds into that multisig transaction d f is an unspent transaction in my wallet which i got from the listunspent rpc call bitcoind createrawtransaction txid d f aab ff ff a bf ddba dc c f vout jav qfvl suyo yihaf srcw qsinyc f c c da db dbf a f ff fab af d ffffffff f a f b d bbbce e f a and bf dc e and sign it bitcoind signrawtransaction f c c da db dbf a f ff fab af d ffffffff f a f b d bbbce e f a and bf dc e hex f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e complete true now create a transaction that will spend that multisig transaction first i need the txid of the transaction i just created so bitcoind decoderawtransaction f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e txid c e d c d f f eef c fb a e c b f a ac etc rest omitted to make this shorter create the spend from multisig transaction since the fund the multisig transaction hasnt been sent yet i need to give txid scriptpubkey and redeemscript bitcoind createrawtransaction txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae gtpsrghrgy kkrnz rykoqrqojug l ds aca f b c e a b c ef e f f d c d e c ffffffff f a ae b db d c db aed bbed b ac now i can partially sign it using one private key bitcoind signrawtransaction aca f b c e a b c ef e f f d c d e c ffffffff f a ae b db d c db aed bbed b ac txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae jatxbaumfpyzfrwryaalk fn sfjp rhqq qsxs cape yqu hex aca f b c e a b c ef e f f d c d e c d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac complete false and then take the hex from that and complete the of signatures using one of the other public keys note the hex result getting longer bitcoind signrawtransaction aca f b c e a b c ef e f f d c d e c d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac txid c e d c d f f eef c fb a e c b f a ac vout scriptpubkey a f b d bbbce e f a and bf dc e redeemscript bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d ae jfjmgo fww p gvx qbydjnazr pmh s axmtdypt ddqmw hex aca f b c e a b c ef e f f d c d e c d d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d f f f a a ecb e d eb cb c d d b a d bfed e f ad d ae e e bc db c a a f ed fb da a cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b a complete true and i can send the funding and spending transactions bitcoind sendrawtransaction f c c da db dbf a f ff fab af d b abbc a fe bda f da d c e and c f f a c d bc e d eafb f e a c de a ab f d e a d e f d adeff c eac fe c be e c c a b bf a bacbd b dc d beeb ad f b b d d a dd ff c effffffff f a f b d bbbce e f a and bf dc e c e d c d f f eef c fb a e c b f a ac bitcoind sendrawtransaction aca f b c e a b c ef e f f d c d e c d d af e d c b ac c c aba f d c f c e of c b f edec d b ae de ebf da b bbdaaba e eb f e d f f f a a ecb e d eb cb c d d b a d bfed e f ad d ae e e bc db c a a f ed fb da a cc bba a bd da fb b e d c d c e bfa f eb e c db bd e aac fbc cb d fe bf f c d b d f c a cab c e b e d c d cef aa a d e dac ef b a a cb f c d f c c ccffef ec d d e fc f f b cd f d f ab a f fbab f e fa fad edbfb e e fa c c f a d aeffffffff f a ae b db d c db aed bbed b ac dea ddc b e ce f a e bbd cc f ac a d ebe a ba you can see these transactions at . quotetalk about getting gangs off the street a truly free market like this can eliminate violence from the drug trade altogether you want to end mexican cartel violence take away the profit from being violent a robust seller reputation system combined with economic incentive makes people safer this is what the general population doesnt understand and what le quite disgustingly pretends isn true i like this concept simply for the fact it is true in terms of what is hard it may seem easy to me and you but to the average population even typing a command line can be quite a lot of work already not everyone is as technically apt as someone like you with cryptography experience in regards to ronins issue with signing are you sure you used the correct scriptpubkey hex and vout index cheers mdparity . that doesnt really solve the problem that i was looking to fix in order to assure that the redeemscript is authentic and hast been tempered each party must communicate in advance of the payment with a separate new signed message in fact it seems even less secure than tmps implementation because you ask the user to give up their private key during normal operations why would the end user have to provide their key when blackbank should be able to sign the transaction and present to the vendor or buyer in the case of a refund the partial signed transaction to complete i can tell you that buyers have key management issues very very often also if a malicious party ever gained control of the server theyd be able to to take every order as it was finalized i was hoping somebody with better skill at crypto than me would be able to figure out a way to present a proof that the key came from a set of keys the vendor produced without resorting to things such as storing signed hashes of keys or the like or doing something like releasing an extended public key that could be used to trace transactions thru the blockchain . quote from owockeznan on february pmthats why i wrote a patch to electrum to fix it so that it works with the same information that bitcoind uses two months ago that patch is the basis of the tmp electrum plugin would you mind helping me out which version of electrum does it work with can you send me a sample transaction one that is already spent and i will try following it through the code any idea why electrum use different inputs to bitcoind but fails to provide any ai forcing one to trawl through there source i am trying to create a of off market escrow plugin what i want to achieve isbuyer sends vendor new public key from his wallet vendor creates mufti sig address and sends buyer his own public key so buyer can verify buyer funds addressthey do business vendor signs a transaction to send funds to himself and sends transaction hex to buyerbuyer signs and broadcasts transactionand why on earth does electrum want more than the hex to sign it was bugging the hell out of me and i done think people will go for this if they have to use the original bitcoind on cud line as its less user friendly rascally i want to make it possible for people to use the plugin to do p p business easily cut out all middlemen . quotethe key is only provided at the time an order is finalized the public private key pairs should only be used once per transaction im sure if you look back up signing a transaction for every purchase would be incredibly difficult for a buyer vendor why would it be difficult what is inherent hard about signing a partial transaction once i hand over my private key i have no control over where the funds go a malicious party in control of the server would be able to do whatever they wanted with the escrow funds at that time that defeats the purpose of a of p sh escrow system the point of the system is that no matter how badly the market is compromise the funds are safe right now tops system is near perfect except for the fact that the user has to send a signed message to the vendor with the redeemscript used to create the p sh address the payment was sent to and if they dont communicate that information in advance of the payment the buyer could lose money on the purchase im looking for a way to solve this corner case without either a buyer being able to link payments together like if you were to get a extended public key from an big wallet or without having to resort having to take extra action on each key produced by the vendor to guarrentee authenticity quotehas anyone tried to sign a multi sir transaction with electrumman it was such a pain in the ass i gave up in the end after a lot of waster time got as far as putting in all the inputs it expects such as prevhash out etc and created the raw transaction but on signing the raw transaction hash it always fails even using all the required inputs as well as the transaction hex from following the python code i am beginning to think the servers i am connecting to dont like it and i dont have the resources to run my own electrum server has anyone tried and got this to work i am giving up and using the original bitcoind but wanted to write a plugin which would make it easy for a newbie to run it in electrumthats why i wrote a patch to electrum to fix it so that it works with the same information that bitcoind uses two months ago that patch is the basis of the tmp electrum plugin . has anyone tried to sign a multi sir transaction with electrumman it was such a pain in the ass i gave up in the end after a lot of waster time got as far as putting in all the inputs it expects such as prevhash out etc and created the raw transaction but on signing the raw transaction hash it always fails even using all the required inputs as well as the transaction hex from following the python code i am beginning to think the servers i am connecting to dont like it and i dont have the resources to run my own electrum server has anyone tried and got this to work i am giving up and using the original bitcoind but wanted to write a plugin which would make it easy for a newbie to run it in electrum . im not working on it its already implements of blackbank multi sig escrow buyer can always withdraw the funds at daytime if not in multi sig buyer can buy multiply items at a time without waiting for multiply confirmations vendor only needs to create a public private key when accepting a purchase the time funds are in blackbank minimized mitigating hacker le confiscation and scam risks funds can be finalized outside of blackbank using bitin it client with an easy to use code no more hackers le confiscation and scam risksin my implementation neither the buyer vendor need to use keys generated from their own wallet the redeemscript is created from private public keys that the vendor and buyer need to generate themselves i found that top uses brainwallet org to generate the keys so i adopted that portion of their system however i dont expect buyers vendors to create the script hashes themselves they simply provide the public keys and blackbank takes care of the address and scripts the redeemscript is kept in the database after generation the vendor does not have to generate multiply addresses because blackbank does not generate any mufti sig until the vendor accepts the purchase so the vendor only needs to create private public key pairs on a per purchase basis this saves them the time of generating multiply private public key pairs at a time during the time that a vendor has not accepted a purchase the buyer can always cancel the purchase as the funds are not in a multi sig address yet when a buyer releases the funds this is when the private key enters the blackbank market system and using the combination of blackbanks and the buyers keys creates a raw transaction from the redeemscript and provided information then releases the funds to a payment address from the vendor an signed transaction hex is also provided to the vendor and buyer after a multi sig escrow begins transaction the hex contains all the information they require to check verify the transaction as well as sign and send a transaction without the assistance of blackbank if say blackbank was unavoidable cheers mdparityps i will definitely be looking up the white papers for bip from a brief overlook deterministic wallets could definitely be useful i need to take a more in depth look on how its used and if it can be implements thanks for the info as its greatly appreciated . since you are one of the only others working on p sh there is an interesting problem ive been working on that i havent found a good solution for how can it be made easy to verify that the redeemscript that your p sh address is made of when doing this sort of automatic escrow system that a market would use doesnt have two public keys produced by the market for the puprose of taking your coins you could of course message your vendor every single time before making your payment i was given redeemscript blah is your public key in there i doubt vendors would be down with that solution you could also require vendors to provide a signed copy of each public key they use so you could verify that it was theirs i dont think a market wants to store all those signed keys nor does a vendor want to go thru the burden of creating them all the easiest solution for a vendor would be to have the vendor provide a public extended key from a big wallet the problem with this is of course it is now trivial to track payments to you on the blockchain because you just look for every redeemscript presented with one of your keys in it i will admit that im not too gamesome at ecc is there anyway to prove to a buyer that one of the addresses in the redeemscript is from the vendor without leaking any of the vendors info . howdy read the wiki i provided the key is only provided at the time an order is finalized the public private key pairs should only be used once per transaction im sure if you look back up signing a transaction for every purchase would be incredibly difficult for a buyer vendor blackbank could provide a partially signed transaction but then the user would need to complete the sign then send the raw transaction for every single purchase if a buyer really doesn want to provide a private key at the time of payment a manual fe code is provided if they dont want to submit their private key which doesnt make sense since its a disposal one time use key the private public key pairs discloses nothing about the vendor or buyer as per my suggestion is to use brainwallet org to generate a random public private key pair you cant trace the public key through the blockchain the private public address generated are not used for actual transactions is is used only for signing regardless once the payment is made the transaction still pays directly to the vendors wallet which is traceable through the blockchain at the end of the day the bitcoin still has to reach the vendors address however as stated the public private key pair has nothing to do with the payment withdrawal addresses how can a random generated public private key from brainwallet org be able to link to a vendor buyer cheers mdparity . interesting post thanks for sharing as i read your post you are recommending storing a wallet backup inside a truecrypt container then storing the truecrypt container on a secure offshore serve not a bad idea at all if i may add some information for consideration both the armory and electrum wallets support true offline cold storage of your private keys both wallets allow you to split the wallet into an online watching only copy of the wallet while the wallet with your private keys is stored on an office computer the online watching only wallet can receive bitcoin routine but if you want to send bitcoin you need to create an signed transaction using the online wallet using a us drive take the signed transaction file to the office wallet and sign it then take the signed transaction file back to your online computer and broadcast it online both armory and electrum allow you to export a digital backup of your office wallet with your private keys it is a simple matter to make a truecrypt container with a strong password in which to store your digital backup since both armory and electrum are deterministic wallets only one backup is only needed ever then just find long term secure storage offshore and upload the truecrypt container and you are good to go using this method of cold storage your bitcoin can not be stolen because your private keys are on your offline computer which must be encrusted with fde with a digital copy kept securely encrusted with truecrypt at the storage location of your choice and you can still send and receive bitcoin using your online and office computers . good info . quite often there seems to be some confusion on how bitin works it seems there is a general belief that the bitcoins are stored in the wallet but this is not true before explaining the purpose of a wallet it is important to first explain how bitin works the information of all the transactions are kept in the bitcoin block which is computed by and kept by the miners this is why rewards are given to miners as they are doing all the number crunching the rewards also promote more miners so there is a spread and no single miner with less than around of the mining power can cheat the numbers so now we have the first part bitcoin blockchain the ledgerthe next important thing is how are funds moved around in the bitcoin blockchain if bitcoins are not moved in and out of the wallet in a amplified manner blockchain is actually a big list of addresses and the funds in them when funds are spent into an address the blockchain will write that the funds were put into the address or moved out of an address on to the second part funding an addresshow does the blockchain know who owns the address in order to understand this it is important to first understand what an address is an address consists of parts based on version of bitcoin addresses private key public key a hash of the private key address a hash of the public key with a checksum then convert to base source that we know all are actually related and unique to each other we can see as we go from to there is a layer of security between each you can use a private key to recreate the public key and address but not the other way around now that we know what the keys are we look at how its used in the third part spending address once a fund has been spent into the address we now have a balance in the address public key the public key is exposed to create a transaction when preparing to send private key now to complete the transaction the private key is used to sign and identify the rights to send the transaction created with the public keyas can be seen the private key identifies the right to spend from an address on the blockchain as the private key is used to derive the public key and address therefore the private key just shows permission to move funds in the blockchain for a specific address finally we have the last part the walletif a wallet does not hold bitcoins what does it hold a wallet is more similar in analogy to an account book that holds your account s and passwords what the native bitcoin it wallet client actually does is hold private key public key addresses to be used for moving funds in the blockchain connects and sends the transaction instructions accordingly scan and keeps records of your transactions from the blockchainsome wallets done even do as they use online sources for information about your account as having a wallet with the full blockchain can take up quite a bit of space and continue to grow since it is a copy of all transactions in the ledger technically you would not even need a wallet to access your funds you just need the private key for your address cold storage is when funds are sent to an address where the private keys are not online or accessible by computer this could be as simple as printing your public and private key onto a piece of paper to saving it in a text file in your usb and sticking it in your drawer without the private key the address can not be accesse if there are any questions or feedback in regards to how bitin blockchain address public private keys and wallets please feel free to contact me at any time cheers mdparityfounder of blackbank . good info . howdy i would like to discuss an implementation of cold storage most people believe putting the wallet private public keys into a usb or an office harddrive or a piece of paper in some hidden obscure place is the best method of cold storage but i completely disagree there are so many possibilities that could result in the loss of the cold storage including le finding and confiscating your only copy ross ulbrichts case and other situations as well hardware failure and just being forgetful and physically losing it i believe that the best way is to put your cold storage online everywhere and even on clouds this is an orthodox method and some might ask how is it cold storage if its online everywhere by definition cold storage means the wallet keys are kept in a container that is not online nor accessible this means it does not necessarily have to be a physical offline container an office container could be something as simple as an uncounted virtual drive benefits of this method impossible to access without the required information impossible to brute hack accessible through many means dont have to worry about getting locked out will never lose the cold storage will not be confiscated information can be passed easily to another person for access ex if you are in prison and you ask your partner to acquire the funds when the container is mounted it is only loaded in memory and no trace is left when dismountedimplementation download truecrypt and create a drive container triple the size of your cold storage wallet keys you dont want it to be too big create a hidden partition for the regular partition create a simple password you would remember hidden partition use both password and keyfiles to encrypt preferable different complex random files from the internet which will always be readily available after you have created the regular hidden partition load some random important information bank account into passwords etc into the regular partion load the wallet keys into the hidden partition rename the created drive as something inconspicious such as says link dll find a rar software package with a bunch of dll files and copy the named drive in the same folder rar the file upload it everywhere online in cloudsin order to find the cold storage someone would need to notice the strange dll find out that it is a truecrypt container discover your fake important information and realize theres still a hidden container and decrypt using your password and know the three random files you used now you would have multiply layers of security as well as methods to access the funds the cold storage wont be confiscated because it is not on your computer the cold storage is not mounted and therefore not online you did not keep the three files you used to encrypt the drive so till be difficult to figure which files from the internet was used if you were in prison your funds will be safe when you come out you just need to download the file package the named container file the password and which random files to download to decrypt the container if you needed access to the funds you can ask someone you trust and provide this information which could be done verbally or in code words to retrieve funds for you ex to pay legal fees think outside of the box cheers mdparityfounder of blackbank . good info . quite often there seems to be some confusion on how bitin works it seems there is a general belief that the bitcoins are stored in the wallet but this is not true before explaining the purpose of a wallet it is important to first explain how bitin works the information of all the transactions are kept in the bitcoin block which is computed by and kept by the miners this is why rewards are given to miners as they are doing all the number crunching the rewards also promote more miners so there is a spread and no single miner with less than around of the mining power can cheat the numbers so now we have the first part bitcoin blockchain the ledgerthe next important thing is how are funds moved around in the bitcoin blockchain if bitcoins are not moved in and out of the wallet in a amplified manner blockchain is actually a big list of addresses and the funds in them when funds are spent into an address the blockchain will write that the funds were put into the address or moved out of an address on to the second part funding an addresshow does the blockchain know who owns the address in order to understand this it is important to first understand what an address is an address consists of parts based on version of bitcoin addresses private key public key a hash of the private key address a hash of the public key with a checksum then convert to base source that we know all are actually related and unique to each other we can see as we go from to there is a layer of security between each you can use a private key to recreate the public key and address but not the other way around now that we know what the keys are we look at how its used in the third part spending address once a fund has been spent into the address we now have a balance in the address public key the public key is exposed to create a transaction when preparing to send private key now to complete the transaction the private key is used to sign and identify the rights to send the transaction created with the public keyas can be seen the private key identifies the right to spend from an address on the blockchain as the private key is used to derive the public key and address therefore the private key just shows permission to move funds in the blockchain for a specific address finally we have the last part the walletif a wallet does not hold bitcoins what does it hold a wallet is more similar in analogy to an account book that holds your account s and passwords what the native bitcoin it wallet client actually does is hold private key public key addresses to be used for moving funds in the blockchain connects and sends the transaction instructions accordingly scan and keeps records of your transactions from the blockchainsome wallets done even do as they use online sources for information about your account as having a wallet with the full blockchain can take up quite a bit of space and continue to grow since it is a copy of all transactions in the ledger technically you would not even need a wallet to access your funds you just need the private key for your address cold storage is when funds are sent to an address where the private keys are not online or accessible by computer this could be as simple as printing your public and private key onto a piece of paper to saving it in a text file in your usb and sticking it in your drawer without the private key the address can not be accesse if there are any questions or feedback in regards to how bitin blockchain address public private keys and wallets please feel free to contact me at any time cheers mdparityfounder of blackbank . interesting post thanks for sharing as i read your post you are recommending storing a wallet backup inside a truecrypt container then storing the truecrypt container on a secure offshore serve not a bad idea at all if i may add some information for consideration both the armory and electrum wallets support true offline cold storage of your private keys both wallets allow you to split the wallet into an online watching only copy of the wallet while the wallet with your private keys is stored on an office computer the online watching only wallet can receive bitcoin routine but if you want to send bitcoin you need to create an signed transaction using the online wallet using a us drive take the signed transaction file to the office wallet and sign it then take the signed transaction file back to your online computer and broadcast it online both armory and electrum allow you to export a digital backup of your office wallet with your private keys it is a simple matter to make a truecrypt container with a strong password in which to store your digital backup since both armory and electrum are deterministic wallets only one backup is only needed ever then just find long term secure storage offshore and upload the truecrypt container and you are good to go using this method of cold storage your bitcoin can not be stolen because your private keys are on your offline computer which must be encrusted with fde with a digital copy kept securely encrusted with truecrypt at the storage location of your choice and you can still send and receive bitcoin using your online and office computers . howdy i would like to discuss an implementation of cold storage most people believe putting the wallet private public keys into a usb or an office harddrive or a piece of paper in some hidden obscure place is the best method of cold storage but i completely disagree there are so many possibilities that could result in the loss of the cold storage including le finding and confiscating your only copy ross ulbrichts case and other situations as well hardware failure and just being forgetful and physically losing it i believe that the best way is to put your cold storage online everywhere and even on clouds this is an orthodox method and some might ask how is it cold storage if its online everywhere by definition cold storage means the wallet keys are kept in a container that is not online nor accessible this means it does not necessarily have to be a physical offline container an office container could be something as simple as an uncounted virtual drive benefits of this method impossible to access without the required information impossible to brute hack accessible through many means dont have to worry about getting locked out will never lose the cold storage will not be confiscated information can be passed easily to another person for access ex if you are in prison and you ask your partner to acquire the funds when the container is mounted it is only loaded in memory and no trace is left when dismountedimplementation download truecrypt and create a drive container triple the size of your cold storage wallet keys you dont want it to be too big create a hidden partition for the regular partition create a simple password you would remember hidden partition use both password and keyfiles to encrypt preferable different complex random files from the internet which will always be readily available after you have created the regular hidden partition load some random important information bank account into passwords etc into the regular partion load the wallet keys into the hidden partition rename the created drive as something inconspicious such as says link dll find a rar software package with a bunch of dll files and copy the named drive in the same folder rar the file upload it everywhere online in cloudsin order to find the cold storage someone would need to notice the strange dll find out that it is a truecrypt container discover your fake important information and realize theres still a hidden container and decrypt using your password and know the three random files you used now you would have multiply layers of security as well as methods to access the funds the cold storage wont be confiscated because it is not on your computer the cold storage is not mounted and therefore not online you did not keep the three files you used to encrypt the drive so till be difficult to figure which files from the internet was used if you were in prison your funds will be safe when you come out you just need to download the file package the named container file the password and which random files to download to decrypt the container if you needed access to the funds you can ask someone you trust and provide this information which could be done verbally or in code words to retrieve funds for you ex to pay legal fees think outside of the box cheers mdparityfounder of blackbank . good info . quite often there seems to be some confusion on how bitin works it seems there is a general belief that the bitcoins are stored in the wallet but this is not true before explaining the purpose of a wallet it is important to first explain how bitin works the information of all the transactions are kept in the bitcoin block which is computed by and kept by the miners this is why rewards are given to miners as they are doing all the number crunching the rewards also promote more miners so there is a spread and no single miner with less than around of the mining power can cheat the numbers so now we have the first part bitcoin blockchain the ledgerthe next important thing is how are funds moved around in the bitcoin blockchain if bitcoins are not moved in and out of the wallet in a amplified manner blockchain is actually a big list of addresses and the funds in them when funds are spent into an address the blockchain will write that the funds were put into the address or moved out of an address on to the second part funding an addresshow does the blockchain know who owns the address in order to understand this it is important to first understand what an address is an address consists of parts based on version of bitcoin addresses private key public key a hash of the private key address a hash of the public key with a checksum then convert to base source that we know all are actually related and unique to each other we can see as we go from to there is a layer of security between each you can use a private key to recreate the public key and address but not the other way around now that we know what the keys are we look at how its used in the third part spending address once a fund has been spent into the address we now have a balance in the address public key the public key is exposed to create a transaction when preparing to send private key now to complete the transaction the private key is used to sign and identify the rights to send the transaction created with the public keyas can be seen the private key identifies the right to spend from an address on the blockchain as the private key is used to derive the public key and address therefore the private key just shows permission to move funds in the blockchain for a specific address finally we have the last part the walletif a wallet does not hold bitcoins what does it hold a wallet is more similar in analogy to an account book that holds your account s and passwords what the native bitcoin it wallet client actually does is hold private key public key addresses to be used for moving funds in the blockchain connects and sends the transaction instructions accordingly scan and keeps records of your transactions from the blockchainsome wallets done even do as they use online sources for information about your account as having a wallet with the full blockchain can take up quite a bit of space and continue to grow since it is a copy of all transactions in the ledger technically you would not even need a wallet to access your funds you just need the private key for your address cold storage is when funds are sent to an address where the private keys are not online or accessible by computer this could be as simple as printing your public and private key onto a piece of paper to saving it in a text file in your usb and sticking it in your drawer without the private key the address can not be accesse if there are any questions or feedback in regards to how bitin blockchain address public private keys and wallets please feel free to contact me at any time cheers mdparityfounder of blackbank . howdy i would like to discuss an implementation of cold storage most people believe putting the wallet private public keys into a usb or an office harddrive or a piece of paper in some hidden obscure place is the best method of cold storage but i completely disagree there are so many possibilities that could result in the loss of the cold storage including le finding and confiscating your only copy ross ulbrichts case and other situations as well hardware failure and just being forgetful and physically losing it i believe that the best way is to put your cold storage online everywhere and even on clouds this is an orthodox method and some might ask how is it cold storage if its online everywhere by definition cold storage means the wallet keys are kept in a container that is not online nor accessible this means it does not necessarily have to be a physical offline container an office container could be something as simple as an uncounted virtual drive benefits of this method impossible to access without the required information impossible to brute hack accessible through many means dont have to worry about getting locked out will never lose the cold storage will not be confiscated information can be passed easily to another person for access ex if you are in prison and you ask your partner to acquire the funds when the container is mounted it is only loaded in memory and no trace is left when dismountedimplementation download truecrypt and create a drive container triple the size of your cold storage wallet keys you dont want it to be too big create a hidden partition for the regular partition create a simple password you would remember hidden partition use both password and keyfiles to encrypt preferable different complex random files from the internet which will always be readily available after you have created the regular hidden partition load some random important information bank account into passwords etc into the regular partion load the wallet keys into the hidden partition rename the created drive as something inconspicious such as says link dll find a rar software package with a bunch of dll files and copy the named drive in the same folder rar the file upload it everywhere online in cloudsin order to find the cold storage someone would need to notice the strange dll find out that it is a truecrypt container discover your fake important information and realize theres still a hidden container and decrypt using your password and know the three random files you used now you would have multiply layers of security as well as methods to access the funds the cold storage wont be confiscated because it is not on your computer the cold storage is not mounted and therefore not online you did not keep the three files you used to encrypt the drive so till be difficult to figure which files from the internet was used if you were in prison your funds will be safe when you come out you just need to download the file package the named container file the password and which random files to download to decrypt the container if you needed access to the funds you can ask someone you trust and provide this information which could be done verbally or in code words to retrieve funds for you ex to pay legal fees think outside of the box cheers mdparityfounder of blackbank . interesting post thanks for sharing as i read your post you are recommending storing a wallet backup inside a truecrypt container then storing the truecrypt container on a secure offshore serve not a bad idea at all if i may add some information for consideration both the armory and electrum wallets support true offline cold storage of your private keys both wallets allow you to split the wallet into an online watching only copy of the wallet while the wallet with your private keys is stored on an office computer the online watching only wallet can receive bitcoin routine but if you want to send bitcoin you need to create an signed transaction using the online wallet using a us drive take the signed transaction file to the office wallet and sign it then take the signed transaction file back to your online computer and broadcast it online both armory and electrum allow you to export a digital backup of your office wallet with your private keys it is a simple matter to make a truecrypt container with a strong password in which to store your digital backup since both armory and electrum are deterministic wallets only one backup is only needed ever then just find long term secure storage offshore and upload the truecrypt container and you are good to go using this method of cold storage your bitcoin can not be stolen because your private keys are on your offline computer which must be encrusted with fde with a digital copy kept securely encrusted with truecrypt at the storage location of your choice and you can still send and receive bitcoin using your online and office computers . howdy i would like to discuss an implementation of cold storage most people believe putting the wallet private public keys into a usb or an office harddrive or a piece of paper in some hidden obscure place is the best method of cold storage but i completely disagree there are so many possibilities that could result in the loss of the cold storage including le finding and confiscating your only copy ross ulbrichts case and other situations as well hardware failure and just being forgetful and physically losing it i believe that the best way is to put your cold storage online everywhere and even on clouds this is an orthodox method and some might ask how is it cold storage if its online everywhere by definition cold storage means the wallet keys are kept in a container that is not online nor accessible this means it does not necessarily have to be a physical offline container an office container could be something as simple as an uncounted virtual drive benefits of this method impossible to access without the required information impossible to brute hack accessible through many means dont have to worry about getting locked out will never lose the cold storage will not be confiscated information can be passed easily to another person for access ex if you are in prison and you ask your partner to acquire the funds when the container is mounted it is only loaded in memory and no trace is left when dismountedimplementation download truecrypt and create a drive container triple the size of your cold storage wallet keys you dont want it to be too big create a hidden partition for the regular partition create a simple password you would remember hidden partition use both password and keyfiles to encrypt preferable different complex random files from the internet which will always be readily available after you have created the regular hidden partition load some random important information bank account into passwords etc into the regular partion load the wallet keys into the hidden partition rename the created drive as something inconspicious such as says link dll find a rar software package with a bunch of dll files and copy the named drive in the same folder rar the file upload it everywhere online in cloudsin order to find the cold storage someone would need to notice the strange dll find out that it is a truecrypt container discover your fake important information and realize theres still a hidden container and decrypt using your password and know the three random files you used now you would have multiply layers of security as well as methods to access the funds the cold storage wont be confiscated because it is not on your computer the cold storage is not mounted and therefore not online you did not keep the three files you used to encrypt the drive so till be difficult to figure which files from the internet was used if you were in prison your funds will be safe when you come out you just need to download the file package the named container file the password and which random files to download to decrypt the container if you needed access to the funds you can ask someone you trust and provide this information which could be done verbally or in code words to retrieve funds for you ex to pay legal fees think outside of the box cheers mdparityfounder of blackbank . quite often there seems to be some confusion on how bitin works it seems there is a general belief that the bitcoins are stored in the wallet but this is not true before explaining the purpose of a wallet it is important to first explain how bitin works the information of all the transactions are kept in the bitcoin block which is computed by and kept by the miners this is why rewards are given to miners as they are doing all the number crunching the rewards also promote more miners so there is a spread and no single miner with less than around of the mining power can cheat the numbers so now we have the first part bitcoin blockchain the ledgerthe next important thing is how are funds moved around in the bitcoin blockchain if bitcoins are not moved in and out of the wallet in a amplified manner blockchain is actually a big list of addresses and the funds in them when funds are spent into an address the blockchain will write that the funds were put into the address or moved out of an address on to the second part funding an addresshow does the blockchain know who owns the address in order to understand this it is important to first understand what an address is an address consists of parts based on version of bitcoin addresses private key public key a hash of the private key address a hash of the public key with a checksum then convert to base source that we know all are actually related and unique to each other we can see as we go from to there is a layer of security between each you can use a private key to recreate the public key and address but not the other way around now that we know what the keys are we look at how its used in the third part spending address once a fund has been spent into the address we now have a balance in the address public key the public key is exposed to create a transaction when preparing to send private key now to complete the transaction the private key is used to sign and identify the rights to send the transaction created with the public keyas can be seen the private key identifies the right to spend from an address on the blockchain as the private key is used to derive the public key and address therefore the private key just shows permission to move funds in the blockchain for a specific address finally we have the last part the walletif a wallet does not hold bitcoins what does it hold a wallet is more similar in analogy to an account book that holds your account s and passwords what the native bitcoin it wallet client actually does is hold private key public key addresses to be used for moving funds in the blockchain connects and sends the transaction instructions accordingly scan and keeps records of your transactions from the blockchainsome wallets done even do as they use online sources for information about your account as having a wallet with the full blockchain can take up quite a bit of space and continue to grow since it is a copy of all transactions in the ledger technically you would not even need a wallet to access your funds you just need the private key for your address cold storage is when funds are sent to an address where the private keys are not online or accessible by computer this could be as simple as printing your public and private key onto a piece of paper to saving it in a text file in your usb and sticking it in your drawer without the private key the address can not be accesse if there are any questions or feedback in regards to how bitin blockchain address public private keys and wallets please feel free to contact me at any time cheers mdparityfounder of blackbank . interesting post thanks for sharing as i read your post you are recommending storing a wallet backup inside a truecrypt container then storing the truecrypt container on a secure offshore serve not a bad idea at all if i may add some information for consideration both the armory and electrum wallets support true offline cold storage of your private keys both wallets allow you to split the wallet into an online watching only copy of the wallet while the wallet with your private keys is stored on an office computer the online watching only wallet can receive bitcoin routine but if you want to send bitcoin you need to create an signed transaction using the online wallet using a us drive take the signed transaction file to the office wallet and sign it then take the signed transaction file back to your online computer and broadcast it online both armory and electrum allow you to export a digital backup of your office wallet with your private keys it is a simple matter to make a truecrypt container with a strong password in which to store your digital backup since both armory and electrum are deterministic wallets only one backup is only needed ever then just find long term secure storage offshore and upload the truecrypt container and you are good to go using this method of cold storage your bitcoin can not be stolen because your private keys are on your offline computer which must be encrusted with fde with a digital copy kept securely encrusted with truecrypt at the storage location of your choice and you can still send and receive bitcoin using your online and office computers . thats only accurate for one type of standarized transaction you can assign outputs to all sorts of different things that dont just require proof of ownership of a private key whose public keys hash corresponds to a certain value of course good luck getting your piedro transaction into the blockchain . wow thanks that was a great post i would never of thought to do that if i ever have an amount of coin that would be worth stealing ill do this lol . wow thanks that was a great post i would never of thought to do that if i ever have an amount of coin that would be worth stealing ill do this lol . wow thanks that was a great post i would never of thought to do that if i ever have an amount of coin that would be worth stealing ill do this lol . thats only accurate for one type of standarized transaction you can assign outputs to all sorts of different things that dont just require proof of ownership of a private key whose public keys hash corresponds to a certain value of course good luck getting your piedro transaction into the blockchain . wow thanks that was a great post i would never of thought to do that if i ever have an amount of coin that would be worth stealing ill do this lol . thats only accurate for one type of standarized transaction you can assign outputs to all sorts of different things that dont just require proof of ownership of a private key whose public keys hash corresponds to a certain value of course good luck getting your piedro transaction into the blockchain . thats only accurate for one type of standarized transaction you can assign outputs to all sorts of different things that dont just require proof of ownership of a private key whose public keys hash corresponds to a certain value of course good luck getting your piedro transaction into the blockchain . 