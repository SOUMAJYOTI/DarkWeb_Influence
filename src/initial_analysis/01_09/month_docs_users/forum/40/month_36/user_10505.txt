experience gbde thinking switching freebsd desktop os comfort zone crypt luks program easy.
 yeah running pax grsec good problem linux generally system making dogs dinner things dont systemd slack gentoo bed slack doesnt arm learning gentoo beer listing individual molecules proportion guinness eli versatile luks.
 quote real sigaint march pmthat freebsd lacking exploit mitigations hardenedbsd org project aims add comprehensive pax freebsds lack aslr insane defeating aslr real hurdle days freebsd isn quoteyou secure openbsd gentoo hardened.
 gbde recommend geli replacement offers features freebsd lacking exploit mitigations hardenedbsd org project aims add comprehensive pax secure openbsd gentoo hardened.
 idea move security wise remember reading articles bsd linus security wise days.
 sigh fine ill friggin openbsd hate openbsd kind os doesnt include support.
 astors security writeup covers lot shit areas talked addressed depth uneducated opinion major step peoples eyes deciding os security summary process elimination main os windows mac nix nix wins closed source reviewed vulnerabilities turn people context joke dont outrun bear slower friend thinking ox win slow friend action open source realize majority distributions open source main linux kernel relies binary blobs endor supplied proprietary form operate device drivers lurk moar bad idea vpshot concerns windows osx proprietary code reasons concerns blobs oss leave dont worry short list dragora dyne colic parabola trisquel gnewsense musix design hurd opened current os short list knocked lack current support concern exploits shellshock case missed shellshock kind big deal people dragora updated years dyne bolic updated years design hurd updated leaves parable trisquel gnewsense musix opened security partially os discussion grsecurity pax minimum builds excepting openbsd afaik tbb remaining oss notes flamed stuck mainstream distributions linux higher chance helpful forums assist sort software fuckup avoid asshole bs cs thinks totally operating system mom totally main rig purposefully include roll oss linus libre gentoo point recompiling kernel post intended animal effort short list opinion trisquel mileage vary case missed tails short list sucks tails binary blobs dont deny rutkowskas article obfuscation correctness isolation loom heavy approach knockout rounds easier starting point correctness firmware hardware software limited impact os secure isolated consideration ways discount linus distributions design bitch systemd spawn satan technical philosophically glaring blobs real possibility incorporate government backdoors interested wrong missed care eyes tl dr oss suck tails dirty secret.
 quote crow march sigh fine ill friggin openbsd hate openbsd kind os doesnt include support hear theo bug feature zaphod.
 openbsd prime rule security inversely proportional ease edit roundabout barrier entry unfix graybeards support eliminate undesirables.
 openbsd kernel supported fuse year ntfs fuse fast.
 thought happen regret hating opened damn theo.
 linus distros blobs sad state affairs openbsd doesnt blobs fact removed readable kernel module support backdoor god root linus machines day kernel modules maintain persistence.
 good points add things state chances remarks year dont hold true today reevaluate things bsd bad press rng weakened crypts guys librem criticised coreboot developers aint easy granted ms rutkowska sex clever combo qubes good point agree trisquell good thing days compared options fellows find convenient customizing.
 quotei qubes isi points contention tubes os binary blobs ignoring obfuscation correctness ignoring firmware pitfalls requiring recommending bad hardwarelets dig binary blobsjust read thread post xen hypervisor works binary blobs code personal note rutkowskas reply intellectual throwing hands accept problem persuasive talented problem surrendered ignoring obfuscation correctnessfrom qubes faqs devs feel approaches reasonable sources security qubes focuses protecting vulnerabilities software maintaining anonymity tails personally mindful areas ignoring firmware pitfallsalthough tubes iommu prevent dma attacks xen boot rest machine starts dont people extra code mobilized bootup process user relies hardware backdoor mitigation tubes design hurt potential firmware backdoors devices communicate main machine keyboard firmware relayed oob amt note hypothetically idea probable attack vector requiring recommending bad hardwarefrom qubesos hardware compatibility list picked laptop lineup lenovo thinkpad running procssor processor vpro qubesos list laptop listed green status elegant fields equate highers security level qubes devs oob bullshit isolation saved point surpassed technical understanding matter rely instincts group recommends vero machine concerned security.
 quote flashy march pmnow bed bad press rng weakened cryptothat freebsd opened freebsd constantly stupid security mistakes.
 eli flexible luks based time lurks openbsd minimalistic low amounts code audits bugs fixed disasters.
 quote crow march pmopenbsd prime rule security inversely proportional ease quote crow march pmedit roundabout barrier entry unfix graybeards support eliminate undesirables thoughts zaphod.
 friendly luks truecrypt crew weird.
 man dastardly dudes amazes install code bios monitor keystrokes steal keys send network calls didnt bios code access application stack tcp ip comms lot.
 agree qubes work progress intellectual experiment interesting tails firmware attacks fresh news disturbing cried suspected efi evil evidence bios bootkits wild ant catalog disclosure equation group cyberespionage platform module nls dll reprograms firmware major vendors leave doubt attacks hardware leaving realm academics white hats tomorrow cansecwest conference vancouver researchers corey kallenberg xeno kovah mitre founders startup legbacore deliver bios vulnerabilities working rootkit implant bios bios protections modifications kallenberg told threatpost automate discovery vulnerabilities space break protections kallenberg attacker remote access compromised computer order execute implant elevate privileges machine hardware exploit turns existing protections place prevent flashing firmware enabling implant inserted executed devious exploit ve insert agent system management mode firmware runs separately operating system managing hardware controls system management mode access memory puts supposedly secure operating systems tails fire implant tails privacy focused operating system runs removal media stick aim privacy anonymity idea os compromised implant tails communication internet connections tor browser shielded malware hit main operating system kallenberg implant waits tails boot scrapes sensitive data memory exfiltrates agent listens background tails doesn plant researchers scrape secret pgp key tails encrusted communication steal passwords encrypted communication plant survives os installation tails built protections including capability wiping ram store data volatile area erased kallenberg idea obvious secure boot disk style things architecturally vulnerable attackers bios level space kovah architectural bios successor uefi introduced modularity order simplify development modularity spelled open source reference implementation uefi abused vendors based code kovah explained common code exists bios variants vendors code reliably install implants models open source reference implementation explains data passed defined locations transfer internally bios kovah open source reference patterns data exists closed source versions common reference points define hook locations attacker place code locations kovah models vendors share code variants code reliably automate search strings hooking place hooks insert code kovah kovah attacker criminal nation state infect bios physical access computer border crossing demo shared threatpost dediprog flash programmer kovah physically clip connector cable bios download implant border crossing evil maid attack physical interdiction attacks access takes minutes find bios idea instilled target open computer connect press start takes seconds flash chip point strong op tails carrying hard drive doesn matter kovah minutes physical access os situation isn bleak researchers vendors solid job patching vulnerabilities reported improve secure coding practices effort vulnerability mitigations time cost exploitation higher bugs killed techniques harder exploit attacking bios appealing persistence system kallenberg.
 great thread mentioning opened read wikipedia article sounds interesting albeit difficult master worthy challenge matured hardware coreboot openbsd good.
 bios.
 