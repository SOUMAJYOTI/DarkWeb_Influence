fallback rdtsc hanged case generic fallback clock gettime clock monotony tails systems clock initials seed pseudorandom number generator bootup edit forgot answer question directly sufficient entropy generated de random source random numbers restart tor messed bit pull source feasible tails.
 quote claptrap march ami question linus crypto lot zaphod understanding live operating systems tails virtual machines whonix problem entropy live os starts state time boots entropy concerns tails thing connect internet generates encryption keys connects tor entropy dev urandom properly seeded entropy system connecting tor mouse movements virtual machines problem worse hardware rng system dev urandom virtual machine question problem tails phoenix read cryptographic papers identical keys ssl keys wild exact problem problem tails developers aware issue closed result including haveged design package quotelinux entropy source havege algorithmhaveged userspace entropy daemon dependent standard mechanisms harvesting randomness system entry pool systems high entropy limited user interaction headless servers haveged havege hardware volatile entropy gathering expansion maintain pool random bytes fill de random supply random bits de random falls low water mark device.
 question linus crypto lot zaphod understanding live operating systems tails virtual machines whonix problem entropy live os starts state time boots entropy concerns tails thing connect internet generates encryption keys connects tor entropy dev urandom properly seeded entropy system connecting tor mouse movements virtual machines problem worse hardware rng system dev urandom virtual machine question problem tails phoenix read cryptographic papers identical keys ssl keys wild exact problem problem.
 guys responses pointing links tails developers comments aware considered solved issue guess avenged algorithm good gathering entry cents solutions tails developers havedged good idea play computer connecting network generating pip keys mess word processor secure crypto bits entropy seed dev urandom time sided dice throws adds bits entropy save result text file command terminal cat dice txt dev randomthis increase kernels official entry count youll kernel properly seeded linux kernel tails based design supports hardware random number generators system systems running intel generation rdrand instruction rdrand backdoored surely tails include support dunno compartmentalization benefits tails ring issue solved.
 quote claptrap march amthanks guys responses pointing links tails developers comments aware considered solved issue guess avenged algorithm good gathering entropy initials impression disagree havegd good decided digging quotemotivationsan unpredictable random number generator practical approximation random number generator previous software algorithms generating unpredictable random number sequences rely entropy gathering measuring unpredictable external events throughput generators range bits limits seeds pseudo random generators unpredictable random number generators needed cryptography modern superscalar processors feature large number hardware mechanisms aim improving performance caches branch predictors tlbs long pipelines instruction level parallelism state components architectural result ordinary application depend volatile directly monitored user hand invocation operating system modifies thousands binary volatile states overviewhavege hardware volatile entropy gathering expansion user level software unpredictable random number generator general purpose computers exploits modifications internal volatile hardware states source uncertainty initialization phase hardware clock cycle counter processor gather entropy tens thousands unpredictable bits gathered operating system call average combines fly hardware volatile entropy gathering pseudo random number generation internal state havege includes thousands internal volatile hardware states unmonitorable havege features high security level havege reach unprecedented throughput software unpredictable random number generator hundreds megabits current workstations pcs throughput havege favorably competes usual pseudo random number generators rand random havege initially designed cryptology application high throughput havege unable application domains demanding high performance high quality random number generators monte carlo simulations leastmore modern appliances pdas cell phones built low power superscalar processors stronger intel xscale features complex operating systems havege implemented platforms demonstrator havege pda featuring pocketpc scale processor havegefurther details havege publications quote claptrap march amanyway cents solutions tails developers havedged good idea play computer connecting network generating pip keys mess word processor secure crypto bits entropy seed dev urandom time sided dice throws adds bits entropy save result text file command terminal cat dice txt dev randomthis increase kernels official entry count youll kernel properly seeded linux kernel tails based design supports hardware random number generators system systems running intel generation rdrand instruction rdrand backdoored surely tails include support dunno compartmentalization benefits tails ring issue solved dont expertise needed critique havegd guys paper published transactions modeling computer simulation october argued guys dilettantes stretch imagination regard worthy note mention monte carlo simulations types simulations require large quantities high quality random numbers claim true internal processor states generate large volumes random numbers good monte carlo simulations understand tails developers chose faith rng.
 discussion guys dont understand half hub.
 